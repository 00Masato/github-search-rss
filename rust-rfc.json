{
    "version": "https://jsonfeed.org/version/1",
    "title": "rust-lang/rfcs pr",
    "home_page_url": "https://00masato.github.io/github-search-rss/rust-rfc.json",
    "feed_url": "https://00masato.github.io/github-search-rss/rust-rfc.json",
    "description": "rust-lang/rfcs pr on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/28781354?u=2a9bab4b2219431526d70e5ed6444e72512206cd&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/aDotInTheVoid/rfcs/blob/rustdoc-types-maintainers/text/0000-rustdoc-types-maintainers.md\">Rendered</a></p>\n<p dir=\"auto\">CC @rust-lang/rustdoc @rust-lang/infra</p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3505",
            "title": "Move `rustdoc-types` to T-Rustdoc ownership.",
            "date_modified": "2023-10-05T18:59:30.000Z",
            "date_published": "2023-10-03T10:27:17.000Z",
            "author": {
                "name": "aDotInTheVoid",
                "url": "https://github.com/aDotInTheVoid"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/60961?u=967a9ccc3f7dba0d5d3acd694e3cf81893defe96&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/epage/rfcs/blob/frontmatter/text/3503-frontmatter.md\">Rendered</a></p>\n<p dir=\"auto\">This is for the T-lang side of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1914174424\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/rfcs/issues/3502\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rust-lang/rfcs/pull/3502/hovercard\" href=\"https://github.com/rust-lang/rfcs/pull/3502\">#3502</a></p>\n<p dir=\"auto\">Example:</p>\n<div class=\"highlight highlight-source-rust notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"#!/usr/bin/env cargo\n```cargo\n[dependencies]\nclap = { version = &quot;4.2&quot;, features = [&quot;derive&quot;] }\n```\n\nuse clap::Parser;\n\n#[derive(Parser, Debug)]\n#[clap(version)]\nstruct Args {\n    #[clap(short, long, help = &quot;Path to config&quot;)]\n    config: Option&lt;std::path::PathBuf&gt;,\n}\n\nfn main() {\n    let args = Args::parse();\n    println!(&quot;{:?}&quot;, args);\n}\"><pre class=\"notranslate\">#!/usr/bin/env cargo\n```cargo\n<span class=\"pl-kos\">[</span>dependencies<span class=\"pl-kos\">]</span>\nclap = <span class=\"pl-kos\">{</span> version = <span class=\"pl-s\">\"4.2\"</span><span class=\"pl-kos\">,</span> features = <span class=\"pl-kos\">[</span><span class=\"pl-s\">\"derive\"</span><span class=\"pl-kos\">]</span> <span class=\"pl-kos\">}</span>\n```\n\n<span class=\"pl-k\">use</span> clap<span class=\"pl-kos\">::</span><span class=\"pl-v\">Parser</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c1\">#<span class=\"pl-kos\">[</span>derive<span class=\"pl-kos\">(</span><span class=\"pl-v\">Parser</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">Debug</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">]</span></span>\n<span class=\"pl-c1\">#<span class=\"pl-kos\">[</span>clap<span class=\"pl-kos\">(</span>version<span class=\"pl-kos\">)</span><span class=\"pl-kos\">]</span></span>\n<span class=\"pl-k\">struct</span> <span class=\"pl-smi\">Args</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">#<span class=\"pl-kos\">[</span>clap<span class=\"pl-kos\">(</span>short, long, help = <span class=\"pl-s\">\"Path to config\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">]</span></span>\n    <span class=\"pl-c1\">config</span><span class=\"pl-kos\">:</span> <span class=\"pl-smi\">Option</span><span class=\"pl-kos\">&lt;</span>std<span class=\"pl-kos\">::</span>path<span class=\"pl-kos\">::</span><span class=\"pl-smi\">PathBuf</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">fn</span> <span class=\"pl-en\">main</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">let</span> args = <span class=\"pl-smi\">Args</span><span class=\"pl-kos\">::</span><span class=\"pl-en\">parse</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-en\">println</span><span class=\"pl-en\">!</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"{:?}\"</span>, args<span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span></pre></div>",
            "url": "https://github.com/rust-lang/rfcs/pull/3503",
            "title": "RFC: Syntax for embedding cargo-script manifests",
            "date_modified": "2023-10-05T13:49:13.000Z",
            "date_published": "2023-09-26T19:40:34.000Z",
            "author": {
                "name": "epage",
                "url": "https://github.com/epage"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/60961?u=967a9ccc3f7dba0d5d3acd694e3cf81893defe96&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/epage/rfcs/blob/script/text/3502-cargo-script.md\">Rendered</a></p>\n<p dir=\"auto\">eRFC <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1685766391\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/rfcs/issues/3424\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rust-lang/rfcs/pull/3424/hovercard\" href=\"https://github.com/rust-lang/rfcs/pull/3424\">#3424</a> was previously approved without any direction on syntax or behavior having been decided.  This RFC is to finalize the decisions made through the implementation to prepare the way for stabilization as we work through the remaining tasks in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1733342552\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/cargo/issues/12207\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rust-lang/cargo/issues/12207/hovercard\" href=\"https://github.com/rust-lang/cargo/issues/12207\">rust-lang/cargo#12207</a></p>\n<p dir=\"auto\"><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1914182358\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/rfcs/issues/3503\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rust-lang/rfcs/pull/3503/hovercard\" href=\"https://github.com/rust-lang/rfcs/pull/3503\">#3503</a> covers the T-lang side of this conversation</p>\n<p dir=\"auto\">Example:</p>\n<div class=\"highlight highlight-source-rust notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"#!/usr/bin/env cargo\n```cargo\n[dependencies]\nclap = { version = &quot;4.2&quot;, features = [&quot;derive&quot;] }\n```\n\nuse clap::Parser;\n\n#[derive(Parser, Debug)]\n#[clap(version)]\nstruct Args {\n    #[clap(short, long, help = &quot;Path to config&quot;)]\n    config: Option&lt;std::path::PathBuf&gt;,\n}\n\nfn main() {\n    let args = Args::parse();\n    println!(&quot;{:?}&quot;, args);\n}\"><pre class=\"notranslate\">#!/usr/bin/env cargo\n```cargo\n<span class=\"pl-kos\">[</span>dependencies<span class=\"pl-kos\">]</span>\nclap = <span class=\"pl-kos\">{</span> version = <span class=\"pl-s\">\"4.2\"</span><span class=\"pl-kos\">,</span> features = <span class=\"pl-kos\">[</span><span class=\"pl-s\">\"derive\"</span><span class=\"pl-kos\">]</span> <span class=\"pl-kos\">}</span>\n```\n\n<span class=\"pl-k\">use</span> clap<span class=\"pl-kos\">::</span><span class=\"pl-v\">Parser</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c1\">#<span class=\"pl-kos\">[</span>derive<span class=\"pl-kos\">(</span><span class=\"pl-v\">Parser</span><span class=\"pl-kos\">,</span> <span class=\"pl-v\">Debug</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">]</span></span>\n<span class=\"pl-c1\">#<span class=\"pl-kos\">[</span>clap<span class=\"pl-kos\">(</span>version<span class=\"pl-kos\">)</span><span class=\"pl-kos\">]</span></span>\n<span class=\"pl-k\">struct</span> <span class=\"pl-smi\">Args</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">#<span class=\"pl-kos\">[</span>clap<span class=\"pl-kos\">(</span>short, long, help = <span class=\"pl-s\">\"Path to config\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">]</span></span>\n    <span class=\"pl-c1\">config</span><span class=\"pl-kos\">:</span> <span class=\"pl-smi\">Option</span><span class=\"pl-kos\">&lt;</span>std<span class=\"pl-kos\">::</span>path<span class=\"pl-kos\">::</span><span class=\"pl-smi\">PathBuf</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">fn</span> <span class=\"pl-en\">main</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">let</span> args = <span class=\"pl-smi\">Args</span><span class=\"pl-kos\">::</span><span class=\"pl-en\">parse</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-en\">println</span><span class=\"pl-en\">!</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"{:?}\"</span>, args<span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<div class=\"highlight highlight-text-shell-session notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ ./prog --config file.toml\nArgs { config: Some(&quot;file.toml&quot;) }\"><pre class=\"notranslate\">$ <span class=\"pl-s1\">./prog --config file.toml</span>\n<span class=\"pl-c1\">Args { config: Some(\"file.toml\") }</span></pre></div>\n<p dir=\"auto\">Note: most of this is available behind <a href=\"https://doc.rust-lang.org/nightly/cargo/reference/unstable.html#script\" rel=\"nofollow\"><code class=\"notranslate\">-Zscript</code></a> (see <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1733342552\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/cargo/issues/12207\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rust-lang/cargo/issues/12207/hovercard\" href=\"https://github.com/rust-lang/cargo/issues/12207\">rust-lang/cargo#12207</a> for limitations).  Support for the code-fence frontmatter was added in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1899598522\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/cargo/issues/12681\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rust-lang/cargo/pull/12681/hovercard\" href=\"https://github.com/rust-lang/cargo/pull/12681\">rust-lang/cargo#12681</a> and it may be a couple of days before cargo's submodule in rust-lang/rust gets updated and built into a nightly.</p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3502",
            "title": "RFC: cargo-script",
            "date_modified": "2023-10-05T08:35:53.000Z",
            "date_published": "2023-09-26T19:34:49.000Z",
            "author": {
                "name": "epage",
                "url": "https://github.com/epage"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/43198?u=4e88d47bc79d87f09f463582681d29f1ed6f478e&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This RFC is an amendment to <a href=\"https://rust-lang.github.io/rfcs/3085-edition-2021.html\" rel=\"nofollow\">RFC 3085</a> to declare that the Rust Project intends to produce a new edition in 2024, to set up a project group to deliver the edition, and to establish a tentative cadence for future editions.</p>\n<p dir=\"auto\"><a href=\"https://github.com/ehuss/rfcs/blob/edition-2024/text/3501-edition-2024.md\">Rendered</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3501",
            "title": "2024 Edition",
            "date_modified": "2023-10-03T21:15:35.000Z",
            "date_published": "2023-09-26T18:58:15.000Z",
            "author": {
                "name": "ehuss",
                "url": "https://github.com/ehuss"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1076834?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">In Rust 2024 and later editions, return position <code class=\"notranslate\">impl Trait</code> (RPIT) opaque types will automatically capture all in-scope type <em>and</em> lifetime parameters.  In preparation for this, new RPIT-like <code class=\"notranslate\">impl Trait</code> features introduced into the Rust 2021 edition will also automatically capture all in-scope type and lifetime parameters.</p>\n<p dir=\"auto\"><a href=\"https://github.com/traviscross/rfcs/blob/TC/lifetime-capture-rules-2024/text/3498-lifetime-capture-rules-2024.md\">Rendered</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3498",
            "title": "Lifetime Capture Rules 2024",
            "date_modified": "2023-10-05T08:53:43.000Z",
            "date_published": "2023-09-25T07:06:08.000Z",
            "author": {
                "name": "traviscross",
                "url": "https://github.com/traviscross"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/8074468?u=3f93edb8a0cb1046224faa47b587bc0e89ae266d&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/eopb/rfcs/blob/precise-pre-release-cargo-update/text/3493-precise-pre-release-cargo-update.md\">Rendered</a></p>\n<p dir=\"auto\">This RFC proposes extending <code class=\"notranslate\">cargo update</code> to allow updates to pre-release versions when requested with <code class=\"notranslate\">--precise</code>. For example, a <code class=\"notranslate\">cargo</code> user would be able to call <code class=\"notranslate\">cargo update -p dep --precise 0.1.1-pre.0</code> as long as the version of <code class=\"notranslate\">dep</code> requested by their project and its dependencies are semver compatible with <code class=\"notranslate\">0.1.1</code>. This effectively splits the notion of compatibility in <code class=\"notranslate\">cargo</code>. A pre-release version may be considered compatible when the version is explicitly requested with <code class=\"notranslate\">--precise</code>. Cargo will not automatically select that version via a basic <code class=\"notranslate\">cargo update</code>.</p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3493",
            "title": "RFC: Precise Pre-release `cargo update`",
            "date_modified": "2023-09-20T17:15:03.000Z",
            "date_published": "2023-09-20T08:09:57.000Z",
            "author": {
                "name": "eopb",
                "url": "https://github.com/eopb"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/15088501?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">the PR and issue have been updated with different semantics</p>\n<p dir=\"auto\"><a href=\"https://github.com/chris-ha458/rfcs/blob/patch-1/text/2495-min-rust-version.md\">Rendered</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3492",
            "title": "Update 2495-min-rust-version.md links",
            "date_modified": "2023-09-19T12:46:15.000Z",
            "date_published": "2023-09-19T10:05:52.000Z",
            "author": {
                "name": "chris-ha458",
                "url": "https://github.com/chris-ha458"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/60961?u=967a9ccc3f7dba0d5d3acd694e3cf81893defe96&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/epage/rfcs/blob/implicit/text/3491-remove-implicit-features.md\">Rendered</a></p>\n<p dir=\"auto\">This would <span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #12173.\">resolve</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1723060490\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/cargo/issues/12173\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rust-lang/cargo/issues/12173/hovercard\" href=\"https://github.com/rust-lang/cargo/issues/12173\">rust-lang/cargo#12173</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3491",
            "title": "RFC: Remove implicit features in a new edition",
            "date_modified": "2023-10-03T21:05:38.000Z",
            "date_published": "2023-09-19T02:04:11.000Z",
            "author": {
                "name": "epage",
                "url": "https://github.com/epage"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/13724985?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/tgross35/rfcs/blob/const-fn-in-trait/text/0000-const-fn-in-trait.md\">Rendered</a></p>\n<p dir=\"auto\">This RFC allows marking methods in traits as <code class=\"notranslate\">const</code>.</p>\n<div class=\"highlight highlight-source-rust notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"trait Foo {\n    const fn bar(a: i32) -&gt; i32;\n}\n\nimpl Foo for MyStruct {\n    // Implementation must provide a const function\n    const fn bar(a: i32) -&gt; i32 {\n        a + 100\n    }\n}\n\n// `&lt;T as Foo&gt;::bar` can then be used in const contexts\nconst fn use_foo&lt;T: Foo&gt;(a: i32) -&gt; i32 {\n    T::bar(a) * 50\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">trait</span> <span class=\"pl-smi\">Foo</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-k\">fn</span> <span class=\"pl-en\">bar</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">a</span><span class=\"pl-kos\">:</span> <span class=\"pl-smi\">i32</span><span class=\"pl-kos\">)</span> -&gt; <span class=\"pl-smi\">i32</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">impl</span> <span class=\"pl-smi\">Foo</span> <span class=\"pl-k\">for</span> <span class=\"pl-smi\">MyStruct</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// Implementation must provide a const function</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-k\">fn</span> <span class=\"pl-en\">bar</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">a</span><span class=\"pl-kos\">:</span> <span class=\"pl-smi\">i32</span><span class=\"pl-kos\">)</span> -&gt; <span class=\"pl-smi\">i32</span> <span class=\"pl-kos\">{</span>\n        a + <span class=\"pl-c1\">100</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-c\">// `&lt;T as Foo&gt;::bar` can then be used in const contexts</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-k\">fn</span> <span class=\"pl-en\">use_foo</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">T</span><span class=\"pl-kos\">:</span> <span class=\"pl-smi\">Foo</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">a</span><span class=\"pl-kos\">:</span> <span class=\"pl-smi\">i32</span><span class=\"pl-kos\">)</span> -&gt; <span class=\"pl-smi\">i32</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-smi\">T</span><span class=\"pl-kos\">::</span><span class=\"pl-en\">bar</span><span class=\"pl-kos\">(</span>a<span class=\"pl-kos\">)</span> <span class=\"pl-c1\">*</span> <span class=\"pl-c1\">50</span>\n<span class=\"pl-kos\">}</span></pre></div>",
            "url": "https://github.com/rust-lang/rfcs/pull/3490",
            "title": "RFC: `const` functions in traits",
            "date_modified": "2023-10-05T05:22:05.000Z",
            "date_published": "2023-09-18T03:53:32.000Z",
            "author": {
                "name": "tgross35",
                "url": "https://github.com/tgross35"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/15850505?u=064c10efd2d57ae0bb9d53c6d97ea0a8e550c2a6&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Categories for crates are now deprecated and implicitly added as keywords instead. A new set of policies is added to allow the crates.io team to curate the way keywords are presented, replacing features such as the \"Popular Categories\" list on crates.io with a \"Popular Keywords\" instead.</p>\n<p dir=\"auto\"><a href=\"https://github.com/clarfonthey/rust-rfcs/blob/cargo-tags/text/0000-deprecate-cargo-categories.md\">Rendered</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3488",
            "title": "Deprecate crate categories and allow metadata on keywords",
            "date_modified": "2023-10-05T16:25:48.000Z",
            "date_published": "2023-09-10T03:37:24.000Z",
            "author": {
                "name": "clarfonthey",
                "url": "https://github.com/clarfonthey"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/13724985?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/tgross35/rfcs/blob/feature-visibility/text/3487-feature-visibility.md\">Rendered</a></p>\n<p dir=\"auto\">RFC for <code class=\"notranslate\">feature-visibility</code><br>\nRFC goals: add a way to make Cargo features private</p>\n<p dir=\"auto\">This was split from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1669093537\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/rfcs/issues/3416\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rust-lang/rfcs/pull/3416/hovercard\" href=\"https://github.com/rust-lang/rfcs/pull/3416\">#3416</a></p>\n<div class=\"highlight highlight-source-toml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"[features]\nfoo = { enables = [], public = false}\"><pre class=\"notranslate\">[<span class=\"pl-en\">features</span>]\n<span class=\"pl-smi\">foo</span> = { <span class=\"pl-smi\">enables</span> = [], <span class=\"pl-smi\">public</span> = <span class=\"pl-c1\">false</span>}</pre></div>\n<p dir=\"auto\">This would <span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #10882.\">resolve</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1310055999\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/cargo/issues/10882\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rust-lang/cargo/issues/10882/hovercard\" href=\"https://github.com/rust-lang/cargo/issues/10882\">rust-lang/cargo#10882</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3487",
            "title": "RFC: Cargo feature visibility (private/public)",
            "date_modified": "2023-10-03T18:33:57.000Z",
            "date_published": "2023-09-09T23:11:39.000Z",
            "author": {
                "name": "tgross35",
                "url": "https://github.com/tgross35"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/13724985?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/tgross35/rfcs/blob/feature-deprecation/text/3486-feature-deprecation.md\">Rendered</a></p>\n<p dir=\"auto\">RFC for <code class=\"notranslate\">feature-deprecation</code><br>\nRFC goals: add a way to deprecate Cargo features</p>\n<p dir=\"auto\">This was split from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1669093537\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/rfcs/issues/3416\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rust-lang/rfcs/pull/3416/hovercard\" href=\"https://github.com/rust-lang/rfcs/pull/3416\">#3416</a></p>\n<div class=\"highlight highlight-source-toml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"[features]\nfoo = { enables = [], deprecated = true }\nfoo = { enables = [], deprecated = &quot;this works as a note&quot; }\nbar = { enables = [], deprecated = { since = &quot;1.2.3&quot;, note = &quot;don't use this!&quot; } }\"><pre class=\"notranslate\">[<span class=\"pl-en\">features</span>]\n<span class=\"pl-smi\">foo</span> = { <span class=\"pl-smi\">enables</span> = [], <span class=\"pl-smi\">deprecated</span> = <span class=\"pl-c1\">true</span> }\n<span class=\"pl-smi\">foo</span> = { <span class=\"pl-smi\">enables</span> = [], <span class=\"pl-smi\">deprecated</span> = <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>this works as a note<span class=\"pl-pds\">\"</span></span> }\n<span class=\"pl-smi\">bar</span> = { <span class=\"pl-smi\">enables</span> = [], <span class=\"pl-smi\">deprecated</span> = { <span class=\"pl-smi\">since</span> = <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>1.2.3<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-smi\">note</span> = <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>don't use this!<span class=\"pl-pds\">\"</span></span> } }</pre></div>\n<p dir=\"auto\">This would <span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #7130.\">resolve</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"467830911\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/cargo/issues/7130\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rust-lang/cargo/issues/7130/hovercard\" href=\"https://github.com/rust-lang/cargo/issues/7130\">rust-lang/cargo#7130</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3486",
            "title": "RFC: Cargo feature deprecation",
            "date_modified": "2023-09-10T07:38:09.000Z",
            "date_published": "2023-09-09T23:06:09.000Z",
            "author": {
                "name": "tgross35",
                "url": "https://github.com/tgross35"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/13724985?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/tgross35/rfcs/blob/feature-documentation/text/3485-feature-documentation.md\">Rendered</a></p>\n<p dir=\"auto\">RFC for <code class=\"notranslate\">feature-documentation</code><br>\nRFC goals: add a way to write feature descriptions in Cargo.toml</p>\n<p dir=\"auto\">This was split from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1669093537\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/rfcs/issues/3416\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rust-lang/rfcs/pull/3416/hovercard\" href=\"https://github.com/rust-lang/rfcs/pull/3416\">#3416</a></p>\n<div class=\"highlight highlight-source-toml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"[features]\n# current configuration\nfoo = []\n# Add a description to the feature\nbar = { enables = [&quot;foo&quot;], doc = &quot;simple docstring here&quot;}\n\n# Features can also be full tables if descriptions are longer\n[features.qux]\nenables = [&quot;bar&quot;, &quot;baz&quot;]\ndoc = &quot;&quot;&quot;\n# qux\n\nThis could be a longer description of this feature\n&quot;&quot;&quot;\"><pre class=\"notranslate\">[<span class=\"pl-en\">features</span>]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> current configuration</span>\n<span class=\"pl-smi\">foo</span> = []\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Add a description to the feature</span>\n<span class=\"pl-smi\">bar</span> = { <span class=\"pl-smi\">enables</span> = [<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>foo<span class=\"pl-pds\">\"</span></span>], <span class=\"pl-smi\">doc</span> = <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>simple docstring here<span class=\"pl-pds\">\"</span></span>}\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Features can also be full tables if descriptions are longer</span>\n[<span class=\"pl-en\">features</span>.<span class=\"pl-en\">qux</span>]\n<span class=\"pl-smi\">enables</span> = [<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bar<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>baz<span class=\"pl-pds\">\"</span></span>]\n<span class=\"pl-smi\">doc</span> = <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span>\n<span class=\"pl-s\"># qux</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">This could be a longer description of this feature</span>\n<span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span></pre></div>\n<p dir=\"auto\">This would <span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #4956.\">resolve</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"289747867\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/cargo/issues/4956\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rust-lang/cargo/issues/4956/hovercard\" href=\"https://github.com/rust-lang/cargo/issues/4956\">rust-lang/cargo#4956</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3485",
            "title": "RFC: Cargo feature descriptions",
            "date_modified": "2023-09-15T21:27:34.000Z",
            "date_published": "2023-09-09T22:59:28.000Z",
            "author": {
                "name": "tgross35",
                "url": "https://github.com/tgross35"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5456384?u=19311cf017def31e83f6c871095f201625f4fb7a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/Lokathor/rfcs/blob/unsafe-extern-blocks/text/0000-unsafe-extern-blocks.md\">Rendered</a></p>\n<hr>\n<p dir=\"auto\">Continuation of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1730097805\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/rfcs/issues/3439\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rust-lang/rfcs/pull/3439/hovercard\" href=\"https://github.com/rust-lang/rfcs/pull/3439\">#3439</a>, very sorry for the mix up, but when I went to make <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1862201012\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/rfcs/issues/3477\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rust-lang/rfcs/pull/3477/hovercard\" href=\"https://github.com/rust-lang/rfcs/pull/3477\">#3477</a> I deleted my <code class=\"notranslate\">rfcs</code> repo fork and re-forked. I had forgotten that there was an open PR at the time.</p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3484",
            "title": "Unsafe Extern Blocks",
            "date_modified": "2023-10-04T17:34:08.000Z",
            "date_published": "2023-09-07T01:15:50.000Z",
            "author": {
                "name": "Lokathor",
                "url": "https://github.com/Lokathor"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/147966?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This RFC proposes a mechanism to allow <code class=\"notranslate\">impl</code>s for a type or trait to be in a<br>\nseparate crate, while still meeting the soundness guarantees currently enforced<br>\nby the orphan rule. With this, the crate structure (and thus build system<br>\ndependency graph) can be decoupled from the actual implementations.</p>\n<p dir=\"auto\"><a href=\"https://github.com/jsgf/rfcs/blob/extern-impl/text/0000-extern-impl.md\">Rendered</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3482",
            "title": "Pre-RFC describing mechanism to optionally loosen some orphan rule constraints",
            "date_modified": "2023-09-21T19:48:05.000Z",
            "date_published": "2023-09-03T01:56:17.000Z",
            "author": {
                "name": "jsgf",
                "url": "https://github.com/jsgf"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/10987325?u=87cf28500eb0d7856861cbaa34384311250cad2f&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/Alfriadox/rust-rfcs/blob/master/text/3481-special-cased-unsized-sums.md\">Rendered</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3481",
            "title": "Special-cased performance improvement for `Iterator::sum` on `Range<u*>` and `RangeInclusive<u*>`",
            "date_modified": "2023-09-06T03:47:08.000Z",
            "date_published": "2023-08-28T23:37:41.000Z",
            "author": {
                "name": "Alfriadox",
                "url": "https://github.com/Alfriadox"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/82600264?u=ba5af4aa760f6b5bd3265bf03021c5748988394b&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Adds the syntax <code class=\"notranslate\">fn &lt;fn_path&gt;</code> to get the exposed type behind a function.</p>\n<p dir=\"auto\"><a href=\"https://github.com/DasLixou/rust-rfcs/blob/master/text/3476-expose-fn-type.md\">Rendered</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3476",
            "title": "RFC: `expose-fn-type`",
            "date_modified": "2023-09-17T16:03:25.000Z",
            "date_published": "2023-08-20T16:47:40.000Z",
            "author": {
                "name": "DasLixou",
                "url": "https://github.com/DasLixou"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/803701?u=ebadc7c37e0aea6c03a620fcdc9533ddf632e587&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/pitaj/rfcs/blob/master/text/3475-unified-string-literals.md\">Rendered</a></p>\n<p dir=\"auto\">This RFC proposes to unify the syntax of the existing <em>string literal</em> and <em>raw string literal</em> forms, supporting both the use of escape sequences and avoiding the need to escape backslashes and quotation marks. This proposal also uses the new syntax to improve format string ergonomics, reducing the need for double-brace escapes.</p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3475",
            "title": "Unified String Literals",
            "date_modified": "2023-10-05T17:32:04.000Z",
            "date_published": "2023-08-15T03:45:27.000Z",
            "author": {
                "name": "pitaj",
                "url": "https://github.com/pitaj"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/39023054?u=ee39bf2d108882dbfecf15b3635ca3a383554a4c&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/HTGAzureX1212/rfcs/blob/rfc-20230813-deprecated-scheduled-removal/text/0000-deprecated-scheduled-removal.md\">Rendered</a></p>\n<p dir=\"auto\">This RFC proposes the addition of a <code class=\"notranslate\">scheduled_removal</code> parameter to the <code class=\"notranslate\">deprecated</code> attribute to optionally specify when the deprecated item will be removed from the public API, making it easier for users of libraries to prepare for migration beforehand.</p>\n<p dir=\"auto\"><a href=\"https://internals.rust-lang.org/t/pre-rfc-scheduled-removal-parameter-for-deprecated-attribute/19324\" rel=\"nofollow\">Prior Discussion on Rust Internals</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3471",
            "title": "RFC: `scheduled_removal` Parameter for `deprecated` Attribute",
            "date_modified": "2023-09-14T03:56:19.000Z",
            "date_published": "2023-08-13T06:06:04.000Z",
            "author": {
                "name": "HTGAzureX1212",
                "url": "https://github.com/HTGAzureX1212"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/162737?u=31a4f284889d0261a2b00e45af696e84dafb1488&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Note that the most eminently bikesheddable portion of this proposal is the<br>\nhandling of niches, and the crABI <code class=\"notranslate\">Option</code> and <code class=\"notranslate\">Result</code> types built around<br>\nthat. There are multiple open questions specifically about that.</p>\n<p dir=\"auto\">I've also listed an open question about how to represent owned crABI<br>\npointers as Rust types: <code class=\"notranslate\">Box&lt;T&gt;</code> versus <code class=\"notranslate\">Box&lt;T, NoDeallocate&gt;</code> versus<br>\n<code class=\"notranslate\">Box&lt;T, FFIDeallocate&lt;obj_free&gt;&gt;</code>.</p>\n<p dir=\"auto\"><a href=\"https://github.com/joshtriplett/rfcs/blob/crabi-v1/text/3470-crabi-v1.md\">Rendered</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3470",
            "title": "crABI v1",
            "date_modified": "2023-08-24T16:26:14.000Z",
            "date_published": "2023-08-11T05:05:41.000Z",
            "author": {
                "name": "joshtriplett",
                "url": "https://github.com/joshtriplett"
            }
        }
    ]
}