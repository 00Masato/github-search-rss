{
    "version": "https://jsonfeed.org/version/1",
    "title": "rust-lang/rfcs pr",
    "home_page_url": "https://00masato.github.io/github-search-rss/rust-rfc.json",
    "feed_url": "https://00masato.github.io/github-search-rss/rust-rfc.json",
    "description": "rust-lang/rfcs pr on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/10329663?u=f631a737c2d7865f5c69ef694f23645b9a97705c&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/ecnelises/rust-rfcs/blob/bf16_f64f64_f80/text/add-bf16-f64f64-and-f80-type.md\">Rendered</a></p>\n<p dir=\"auto\">Previous RFC <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1779419348\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/rfcs/issues/3451\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rust-lang/rfcs/pull/3451/hovercard\" href=\"https://github.com/rust-lang/rfcs/pull/3451\">#3451</a> mixes proposal for IEEE-754 compliant <code class=\"notranslate\">f16</code>/<code class=\"notranslate\">f128</code> and such non-standard types, split this off from it to focus on the target related ones.</p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3456",
            "title": "Add `bf16`, `f64f64` and `f80` types",
            "date_modified": "2023-07-12T07:41:32.000Z",
            "date_published": "2023-07-10T16:48:54.000Z",
            "author": {
                "name": "ecnelises",
                "url": "https://github.com/ecnelises"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/60961?u=967a9ccc3f7dba0d5d3acd694e3cf81893defe96&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This RFC proposes creating a new sub-team for shepherding improvements to the end-user experience (wider Rust development community) for verifying their Rust code.  For example, this team would be overseeing improvements to <code class=\"notranslate\">cargo test</code> (owned by T-cargo under T-devtools) and lib<code class=\"notranslate\">test</code> (owned by T-libs).</p>\n<p dir=\"auto\"><a href=\"https://github.com/epage/rfcs/blob/test/text/3455-t-test.md\">Rendered</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3455",
            "title": "Create a Testing sub-team",
            "date_modified": "2023-07-03T20:14:56.000Z",
            "date_published": "2023-07-03T18:39:27.000Z",
            "author": {
                "name": "epage",
                "url": "https://github.com/epage"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1646875?u=24618295fece29a0bf5c850faf2555985232f5f2&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/aaronfranke/rfcs/blob/3453-f16-and-f128/text/3453-f16-and-f128.md\">Rendered</a></p>\n<p dir=\"auto\">See the discussion leading up to this RFC in issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"403493179\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/rfcs/issues/2629\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rust-lang/rfcs/issues/2629/hovercard\" href=\"https://github.com/rust-lang/rfcs/issues/2629\">#2629</a>, and see the RFC for further floating point types at <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1779419348\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/rfcs/issues/3451\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rust-lang/rfcs/pull/3451/hovercard\" href=\"https://github.com/rust-lang/rfcs/pull/3451\">#3451</a>. This RFC is mostly a subset of what was originally proposed in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1779419348\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/rfcs/issues/3451\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rust-lang/rfcs/pull/3451/hovercard\" href=\"https://github.com/rust-lang/rfcs/pull/3451\">#3451</a>, and was split off to provide an easier path to consensus for types that don't have as many debatable implementation aspects.</p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3453",
            "title": "Add `f16` and `f128` float types",
            "date_modified": "2023-07-10T20:03:14.000Z",
            "date_published": "2023-07-02T06:39:53.000Z",
            "author": {
                "name": "aaronfranke",
                "url": "https://github.com/aaronfranke"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/779501?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/kpreid/rust-rfcs/blob/nested-publish/text/0000-nested-publish.md\">Rendered</a></p>\n<p dir=\"auto\">This is my first Rust RFC. The idea was previously discussed on IRLO (<a href=\"https://internals.rust-lang.org/t/private-nested-cargo-packages/19042\" rel=\"nofollow\">Private nested Cargo packages</a>), and the feedback was generally positive except for confusion about exactly what was being changed, which I believe I have now precisely defined in this RFC draft.</p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3452",
            "title": "RFC: Nested Cargo packages",
            "date_modified": "2023-07-08T17:27:54.000Z",
            "date_published": "2023-07-01T00:50:11.000Z",
            "author": {
                "name": "kpreid",
                "url": "https://github.com/kpreid"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/10329663?u=f631a737c2d7865f5c69ef694f23645b9a97705c&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/ecnelises/rust-rfcs/blob/additional-floats/text/3451-additional-float-types.md\">Rendered</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3451",
            "title": "Additional float types",
            "date_modified": "2023-07-11T20:31:22.000Z",
            "date_published": "2023-06-28T17:45:07.000Z",
            "author": {
                "name": "ecnelises",
                "url": "https://github.com/ecnelises"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/451321?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Add a new syntax for multi-line string literals designed to contain code and play nicely with <code class=\"notranslate\">rustfmt</code>.</p>\n<p dir=\"auto\"><a href=\"https://github.com/Diggsey/rfcs/blob/code-string-literals/text/0000-code-literals.md\">Rendered</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3450",
            "title": "Propose code string literals",
            "date_modified": "2023-07-11T01:56:59.000Z",
            "date_published": "2023-06-18T17:01:25.000Z",
            "author": {
                "name": "Diggsey",
                "url": "https://github.com/Diggsey"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/563826?u=a408b5784df40b974e45854386172e7e7ebc1797&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Add new <code class=\"notranslate\">is_{arch}_feature_enabled</code> macros for detecting at compile time if a target feature is enabled in a context.</p>\n<p dir=\"auto\"><a href=\"https://github.com/calebzulawski/rfcs/blob/target-feature-enabled/text/3449-target-feature-enabled.md\">Rendered</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3449",
            "title": "Contextual target feature detection",
            "date_modified": "2023-07-05T17:36:43.000Z",
            "date_published": "2023-06-18T02:46:56.000Z",
            "author": {
                "name": "calebzulawski",
                "url": "https://github.com/calebzulawski"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2420441?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">The Store offers a more flexible allocation API, suitable for in-line memory store, shared memory store, compact \"pointers\", const/static use, and more.</p>\n<p dir=\"auto\">Adoption of this API, and its use in standard collections, would render a number of specialized crates obsolete in full or in part, such as StackFuture.</p>\n<p dir=\"auto\"><a href=\"https://github.com/matthieu-m/rfcs/blob/store/text/3446-store.md\">Rendered</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3446",
            "title": "Introduce the Store API for great good.",
            "date_modified": "2023-07-09T02:02:56.000Z",
            "date_published": "2023-06-17T13:40:53.000Z",
            "author": {
                "name": "matthieu-m",
                "url": "https://github.com/matthieu-m"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/36625023?u=dba7deb4fbb4c429e08b309e3e3f9feba236ae28&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This RFC is all about allowing types to be inferred without any compromises. The syntax is as follows. For additional information, please read the bellow.</p>\n<div class=\"highlight highlight-source-rust notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"struct MyStruct {\n    value: usize\n}\n\nimpl MyStruct {\n    fn new(value: usize) -&gt; Self {\n        Self {\n            value\n        }\n    }\n}\n\nfn my_func(data: MyStruct) { /* ... */ }\n\nmy_func(_::new(1));\"><pre class=\"notranslate\"><span class=\"pl-k\">struct</span> <span class=\"pl-smi\">MyStruct</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c1\">value</span><span class=\"pl-kos\">:</span> <span class=\"pl-smi\">usize</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">impl</span> <span class=\"pl-smi\">MyStruct</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">fn</span> <span class=\"pl-en\">new</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">value</span><span class=\"pl-kos\">:</span> <span class=\"pl-smi\">usize</span><span class=\"pl-kos\">)</span> -&gt; <span class=\"pl-smi\">Self</span> <span class=\"pl-kos\">{</span>\n        <span class=\"pl-smi\">Self</span> <span class=\"pl-kos\">{</span>\n            value\n        <span class=\"pl-kos\">}</span>\n    <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">fn</span> <span class=\"pl-en\">my_func</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">data</span><span class=\"pl-kos\">:</span> <span class=\"pl-smi\">MyStruct</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c\">/* ... */</span> <span class=\"pl-kos\">}</span>\n\n<span class=\"pl-en\">my_func</span><span class=\"pl-kos\">(</span>_<span class=\"pl-kos\">::</span><span class=\"pl-en\">new</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">I think this is a much better and more concise syntax.</p>\n<blockquote>\n<p dir=\"auto\">If you plan on pressing the dislike button, please leave a comment explaining your disproval. Every piece of constructive feedback helps.</p>\n</blockquote>\n<p dir=\"auto\"><a href=\"https://github.com/JoshuaBrest/rfcs/blob/master/text/0000-inferred-types.md\">Rendered</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3444",
            "title": "Inferred types",
            "date_modified": "2023-07-12T07:37:14.000Z",
            "date_published": "2023-06-07T05:01:10.000Z",
            "author": {
                "name": "JoshuaBrest",
                "url": "https://github.com/JoshuaBrest"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/19656507?u=6660e21862872967475a54df58143d25987e350b&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">I wrote up my thoughts from <a href=\"https://internals.rust-lang.org/t/macro-rules-metavariable-for-generic/18889\" rel=\"nofollow\">this rust-internals thread</a> into an RFC.</p>\n<p dir=\"auto\"><a href=\"https://github.com/JarredAllen/rust-lang-rfcs/blob/fragment-specifiers-for-generic-arguments/text/0000-fragment-specifiers-for-generic-arguments.md\">Rendered</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3442",
            "title": "Fragment Specifiers for Generic Arguments",
            "date_modified": "2023-06-06T00:15:21.000Z",
            "date_published": "2023-06-01T20:44:34.000Z",
            "author": {
                "name": "JarredAllen",
                "url": "https://github.com/JarredAllen"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/127629827?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/blagowtf/rust-rfcs-virt-self/blob/master/text/3440-virt-self.md\">Rendered</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3440",
            "title": "Virtually dispatched trait methods",
            "date_modified": "2023-06-20T01:36:22.000Z",
            "date_published": "2023-05-30T15:37:37.000Z",
            "author": {
                "name": "blagowtf",
                "url": "https://github.com/blagowtf"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5456384?u=19311cf017def31e83f6c871095f201625f4fb7a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/Lokathor/rfcs/blob/Lokathor-patch-1/text/0000-unsafe_extern.md\">Rendered</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3439",
            "title": "Unsafe Extern Blocks",
            "date_modified": "2023-06-22T09:08:24.000Z",
            "date_published": "2023-05-29T05:32:21.000Z",
            "author": {
                "name": "Lokathor",
                "url": "https://github.com/Lokathor"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/79955405?u=c4a50058c2fe0214e4243abaf547ee6e1f59de46&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/Jules-Bertholet/rfcs/blob/implementable-trait-alias/text/3437-implementable-trait-alias.md\">Rendered</a></p>\n<p dir=\"auto\">Allow writing <code class=\"notranslate\">impl</code> blocks for certain trait aliases.</p>\n<p dir=\"auto\"><a href=\"https://internals.rust-lang.org/t/implementable-trait-aliases/18806/\" rel=\"nofollow\">Prior discussion on Internals</a></p>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/rustbot/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rustbot\">@rustbot</a> label A-traits</p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3437",
            "title": "RFC: Implementable trait aliases",
            "date_modified": "2023-06-15T17:54:10.000Z",
            "date_published": "2023-05-24T23:54:47.000Z",
            "author": {
                "name": "Jules-Bertholet",
                "url": "https://github.com/Jules-Bertholet"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/783247?u=9531927576dae8d2a9b8a9c5ebea42db423c01c7&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/m-ou-se/rfcs/blob/export/text/0000-export.md\">Rendered</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3435",
            "title": "RFC: `#[export]` (dynamically linked crates)",
            "date_modified": "2023-06-14T17:40:32.000Z",
            "date_published": "2023-05-23T13:06:18.000Z",
            "author": {
                "name": "m-ou-se",
                "url": "https://github.com/m-ou-se"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/6801863?u=699ef806e3d9624167be89db3c7217df5193775e&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This RFC proposes adding a (defaulted) generic parameter to the <code class=\"notranslate\">core::future::Future</code> trait to allow more flexibility in <code class=\"notranslate\">Future::poll</code>'s second argument (<code class=\"notranslate\">context</code>).</p>\n<p dir=\"auto\">This is would allow new <code class=\"notranslate\">Waker</code>s to be created, that may be used to:</p>\n<ul dir=\"auto\">\n<li>Allow the creation of ABI-stable wakers, allowing futures constructed by a shared object to be run on another's executor.</li>\n<li>Allow wakers to adopt other structures that that of vtable/pointer pairs, which may be desirable to certain domains.</li>\n<li>Allow specific futures to rely on additional behaviour of specific wakers that certain executors may provide.</li>\n</ul>\n<p dir=\"auto\"><a href=\"https://github.com/p-avital/rfcs/blob/generic-futures/text/3434-generic-futures.md\">Rendered</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3434",
            "title": "Generic Futures",
            "date_modified": "2023-06-09T13:49:40.000Z",
            "date_published": "2023-05-22T08:17:38.000Z",
            "author": {
                "name": "p-avital",
                "url": "https://github.com/p-avital"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/646128?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/jmillikin/upstream__rust-rfcs/blob/unix-socket-ancillary-data/text/3430-unix-socket-ancillary-data-v2.md\">Rendered</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3430",
            "title": "RFC: Unix socket ancillary data v2",
            "date_modified": "2023-05-16T03:29:58.000Z",
            "date_published": "2023-05-10T08:25:04.000Z",
            "author": {
                "name": "jmillikin",
                "url": "https://github.com/jmillikin"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/13724985?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">RFC for rustdoc-cargo-configuration</p>\n<p dir=\"auto\"><a href=\"https://github.com/tgross35/rfcs/blob/rustdoc-cargo-config/text/0000-rustdoc-cargo-configuration.md\">Rendered</a></p>\n<p dir=\"auto\">This RFC describes a way for <code class=\"notranslate\">rustdoc</code> to get information from <code class=\"notranslate\">Cargo.toml</code>. Its main use case is the Cargo feature descriptions RFC <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1669093537\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/rfcs/issues/3416\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rust-lang/rfcs/pull/3416/hovercard\" href=\"https://github.com/rust-lang/rfcs/pull/3416\">#3416</a>.</p>\n<p dir=\"auto\">The implementation goal of this RFC is <em>only</em> to get <code class=\"notranslate\">rustdoc</code> working. However, it describes a flexible configuration that could be implemented for other tools (<code class=\"notranslate\">rustfmt</code>, <code class=\"notranslate\">clippy</code>, or any of the <code class=\"notranslate\">cargo-xyz</code> tools) and can be used by build systems other than Cargo (e.g. <code class=\"notranslate\">Make</code> or some WASM extensions of <code class=\"notranslate\">npm</code>)</p>\n<p dir=\"auto\">Related:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1586028300\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/rfcs/issues/3389\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rust-lang/rfcs/pull/3389/hovercard\" href=\"https://github.com/rust-lang/rfcs/pull/3389\">#3389</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"258689168\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/rust/issues/44690\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rust-lang/rust/issues/44690/hovercard\" href=\"https://github.com/rust-lang/rust/issues/44690\">rust-lang/rust#44690</a></li>\n</ul>",
            "url": "https://github.com/rust-lang/rfcs/pull/3421",
            "title": "RFC: Rustdoc configuration via Cargo (includes feature descriptions)",
            "date_modified": "2023-04-24T20:23:17.000Z",
            "date_published": "2023-04-20T09:15:25.000Z",
            "author": {
                "name": "tgross35",
                "url": "https://github.com/tgross35"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/12226503?u=261e4d3e8648e7cfa2c203d5d71ea58f7f97bed4&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">for reference I created an issue about this here: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1668184055\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/libs-team/issues/210\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rust-lang/libs-team/issues/210/hovercard\" href=\"https://github.com/rust-lang/libs-team/issues/210\">rust-lang/libs-team#210</a> &amp; a rust internals thread here: <a href=\"https://internals.rust-lang.org/t/should-pi-be-available-as-f32-pi-etc/18670\" rel=\"nofollow\">https://internals.rust-lang.org/t/should-pi-be-available-as-f32-pi-etc/18670</a></p>\n<p dir=\"auto\">it's my first time writing an rfc so please let me know if there's anything that can be improved :)</p>\n<p dir=\"auto\"><a href=\"https://github.com/pommicket/rfcs/blob/associated-math-constants/text/0000-associated-math-constants.md\">Rendered</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3418",
            "title": "RFC: Associated mathematical constants",
            "date_modified": "2023-04-21T18:55:22.000Z",
            "date_published": "2023-04-17T13:47:12.000Z",
            "author": {
                "name": "pommicket",
                "url": "https://github.com/pommicket"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/29864074?u=133f9259e09c1bc34f6f4dd2451554472abddfff&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">based on the discussion from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1419486184\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/rust/issues/103413\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rust-lang/rust/pull/103413/hovercard\" href=\"https://github.com/rust-lang/rust/pull/103413\">rust-lang/rust#103413</a> and <a href=\"https://rust-lang.zulipchat.com/#narrow/stream/213817-t-lang/topic/deprecating.20spooky-dropck-at-a-distance/near/349392447\" rel=\"nofollow\">https://rust-lang.zulipchat.com/#narrow/stream/213817-t-lang/topic/deprecating.20spooky-dropck-at-a-distance/near/349392447</a>. A big thanks to <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/SoniEx2/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/SoniEx2\">@SoniEx2</a> for their valuable input in these threads.</p>\n<p dir=\"auto\">I consider this to be solely the responsibility of t-types, but cc @rust-lang/lang, <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/RalfJung/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/RalfJung\">@RalfJung</a></p>\n<p dir=\"auto\"><a href=\"https://github.com/lcnr/rfcs/blob/bb-may-dangle/text/3417-dropck-eyepatch-v3.md\">rendered</a></p>",
            "url": "https://github.com/rust-lang/rfcs/pull/3417",
            "title": "improve `#[may_dangle]` for type parameters",
            "date_modified": "2023-04-29T03:40:42.000Z",
            "date_published": "2023-04-17T11:53:28.000Z",
            "author": {
                "name": "lcnr",
                "url": "https://github.com/lcnr"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/13724985?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">RFC for <code class=\"notranslate\">feature-metadata</code></p>\n<p dir=\"auto\"><a href=\"https://github.com/tgross35/rfcs/blob/feature-descriptions-doc-cfg/text/3416-feature-metadata.md\">Rendered</a></p>\n<p dir=\"auto\">RFC goals: add a way to write feature descriptions and other feature configuration in <code class=\"notranslate\">Cargo.toml</code>. <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1676328953\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/rfcs/issues/3421\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rust-lang/rfcs/pull/3421/hovercard\" href=\"https://github.com/rust-lang/rfcs/pull/3421\">#3421</a> will provide a way for <code class=\"notranslate\">rustdoc</code> to use that information.</p>\n<div class=\"highlight highlight-source-toml notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"# Cargo.toml snippet\n\n[features]\n# current configuration\nfoo = []\n# Add a description to the feature\nbar = { requires = [&quot;foo&quot;], doc = &quot;simple docstring here&quot;}\n# `public` indicates whether or not the feature should be visible in\n# documentation, and defaults to true\nbaz = { requires = [&quot;foo&quot;], public = false }\n\n# Features can also be full tables if descriptions are longer\n[features.qux]\nrequires = [&quot;bar&quot;, &quot;baz&quot;]\ndoc = &quot;&quot;&quot;\n# qux\n\nThis could be a longer description of this feature\n&quot;&quot;&quot;\"><pre class=\"notranslate\"><span class=\"pl-c\"><span class=\"pl-c\">#</span> Cargo.toml snippet</span>\n\n[<span class=\"pl-en\">features</span>]\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> current configuration</span>\n<span class=\"pl-smi\">foo</span> = []\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Add a description to the feature</span>\n<span class=\"pl-smi\">bar</span> = { <span class=\"pl-smi\">requires</span> = [<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>foo<span class=\"pl-pds\">\"</span></span>], <span class=\"pl-smi\">doc</span> = <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>simple docstring here<span class=\"pl-pds\">\"</span></span>}\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> `public` indicates whether or not the feature should be visible in</span>\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> documentation, and defaults to true</span>\n<span class=\"pl-smi\">baz</span> = { <span class=\"pl-smi\">requires</span> = [<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>foo<span class=\"pl-pds\">\"</span></span>], <span class=\"pl-smi\">public</span> = <span class=\"pl-c1\">false</span> }\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Features can also be full tables if descriptions are longer</span>\n[<span class=\"pl-en\">features</span>.<span class=\"pl-en\">qux</span>]\n<span class=\"pl-smi\">requires</span> = [<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>bar<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>baz<span class=\"pl-pds\">\"</span></span>]\n<span class=\"pl-smi\">doc</span> = <span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span>\n<span class=\"pl-s\"># qux</span>\n<span class=\"pl-s\"></span>\n<span class=\"pl-s\">This could be a longer description of this feature</span>\n<span class=\"pl-s\"><span class=\"pl-pds\">\"\"\"</span></span></pre></div>\n<p dir=\"auto\">Zulip discussion: <a href=\"https://rust-lang.zulipchat.com/#narrow/stream/266220-rustdoc/topic/Descriptions.20for.20feature.20flags\" rel=\"nofollow\">https://rust-lang.zulipchat.com/#narrow/stream/266220-rustdoc/topic/Descriptions.20for.20feature.20flags</a></p>\n<p dir=\"auto\">This would resolve:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"289747867\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/cargo/issues/4956\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rust-lang/cargo/issues/4956/hovercard\" href=\"https://github.com/rust-lang/cargo/issues/4956\">rust-lang/cargo#4956</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1310055999\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/cargo/issues/10882\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rust-lang/cargo/issues/10882/hovercard\" href=\"https://github.com/rust-lang/cargo/issues/10882\">rust-lang/cargo#10882</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"467830911\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/cargo/issues/7130\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rust-lang/cargo/issues/7130/hovercard\" href=\"https://github.com/rust-lang/cargo/issues/7130\">rust-lang/cargo#7130</a></li>\n</ul>\n<p dir=\"auto\">The following were deferred out:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1310053486\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rust-lang/cargo/issues/10881\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rust-lang/cargo/issues/10881/hovercard\" href=\"https://github.com/rust-lang/cargo/issues/10881\">rust-lang/cargo#10881</a></li>\n</ul>",
            "url": "https://github.com/rust-lang/rfcs/pull/3416",
            "title": "RFC: Cargo feature descriptions & metadata",
            "date_modified": "2023-07-06T21:18:05.000Z",
            "date_published": "2023-04-15T01:20:53.000Z",
            "author": {
                "name": "tgross35",
                "url": "https://github.com/tgross35"
            }
        }
    ]
}