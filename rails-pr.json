{
    "version": "https://jsonfeed.org/version/1",
    "title": "rails/rails pr",
    "home_page_url": "https://00masato.github.io/github-search-rss/rails-pr.json",
    "feed_url": "https://00masato.github.io/github-search-rss/rails-pr.json",
    "description": "rails/rails pr on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/3124?u=6ece6a5a8b8ea32c5fa94c325d151bc01d1e44e8&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Text tokens may be conditionally appended to the output buffer.  For example if we have a template like this:</p>\n<div class=\"highlight highlight-text-html-erb notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&lt;h1&gt;Oh no!&lt;/h1&gt;\nThis template has a runtime error\n&lt;b&gt;\n  &lt;% if true %&gt;\n    &lt;%= method_that_does_not_exist %&gt;\n  &lt;% end %&gt;\n&lt;/b&gt;\nYikes!\"><pre class=\"notranslate\"><span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">h1</span><span class=\"pl-kos\">&gt;</span>Oh no!<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">h1</span><span class=\"pl-kos\">&gt;</span>\nThis template has a runtime error\n<span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">b</span><span class=\"pl-kos\">&gt;</span>\n  <span class=\"pl-k\">&lt;%</span> <span class=\"pl-k\">if</span> <span class=\"pl-c1\">true</span> <span class=\"pl-k\">%&gt;</span><span class=\"pl-k\"></span>\n<span class=\"pl-k\">    &lt;%=</span> <span class=\"pl-en\">method_that_does_not_exist</span> <span class=\"pl-k\">%&gt;</span><span class=\"pl-k\"></span>\n<span class=\"pl-k\">  &lt;%</span> <span class=\"pl-k\">end</span> <span class=\"pl-k\">%&gt;</span>\n<span class=\"pl-kos\">&lt;/</span><span class=\"pl-ent\">b</span><span class=\"pl-kos\">&gt;</span>\nYikes!</pre></div>\n<p dir=\"auto\">In the above case, a string literal (<code class=\"notranslate\">\"    \"</code>) will be conditionally<br>\nappended to the output buffer with some code like below:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@output_buffer.safe_append='    '.freeze\"><pre class=\"notranslate\"><span class=\"pl-c1\">@output_buffer</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">safe_append</span><span class=\"pl-c1\">=</span><span class=\"pl-s\">'    '</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">freeze</span></pre></div>\n<p dir=\"auto\">This commit teaches text tokens (string literals) to scan forward in the compiled template until it finds the literal, thereby skipping the code generated for appending to the output buffer.</p>\n<p dir=\"auto\">Related to:</p>\n<ul dir=\"auto\">\n<li>Bug: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1701211131\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/48173\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rails/rails/issues/48173/hovercard\" href=\"https://github.com/rails/rails/issues/48173\">#48173</a></li>\n<li>PR: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1702975773\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/48184\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/48184/hovercard\" href=\"https://github.com/rails/rails/pull/48184\">#48184</a></li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48294",
            "title": "Scan forward until text tokens match",
            "date_modified": "2023-05-24T20:01:25.000Z",
            "date_published": "2023-05-24T19:55:37.000Z",
            "author": {
                "name": "tenderlove",
                "url": "https://github.com/tenderlove"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/8207?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<h4 dir=\"auto\">The modern web is built on HTML5</h4>\n<p dir=\"auto\">The HTML sanitizers used in Rails through 7.0, <a href=\"https://github.com/rails/rails-html-sanitizer\">rails/rails-html-sanitizer</a>, use Loofah and Nokogiri -- specifically relying on Nokogiri's HTML4 parser, libxml2.</p>\n<p dir=\"auto\">libxml2's HTML4 parser has not kept up-to-date with the HTML5 standards upon which  most modern web applications rely, and so it does not behave the same way as modern browsers. Some more context about this statement can be found at <a href=\"https://github.com/sparklemotion/nokogiri/issues/2064\" data-hovercard-type=\"issue\" data-hovercard-url=\"/sparklemotion/nokogiri/issues/2064/hovercard\">RFC: Explore alternatives to libxml2 for HTML parsing · Issue #2064 · sparklemotion/nokogiri</a>, but perhaps the most important bit is this quote from the primary libxml2 maintainer:</p>\n<blockquote>\n<p dir=\"auto\">it's still a bad idea to use a 20+ years old, unmaintained HTML 4 parser to sanitize input for the modern web</p>\n</blockquote>\n<p dir=\"auto\">(source: <a href=\"https://bugzilla.gnome.org/show_bug.cgi?id=769760#c4\" rel=\"nofollow\">https://bugzilla.gnome.org/show_bug.cgi?id=769760#c4</a>)</p>\n<p dir=\"auto\">For the most part this has not prevented users from accomplishing what they need to do. But on occasion it has resulted in security issues, and has at times caused unexpected behavior in Rails applications.</p>\n<h4 dir=\"auto\">Security implications of using HTML4 on the server and HTML5 on the client</h4>\n<p dir=\"auto\">Some background on security issues that have resulted from the behavior differences between the server-side HTML4 sanitizers and the client-side (browser) HTML5 parsers: <a href=\"https://github.com/flavorjones/loofah/blob/main/docs/2022-10-decision-on-cdata-nodes.md\">loofah/2022-10-decision-on-cdata-nodes.md</a>.</p>\n<p dir=\"auto\">I'll call out this statement I made in that document for emphasis:</p>\n<blockquote>\n<p dir=\"auto\">It's important to note that if we use an HTML5 parser for the sanitization pass, this entire class of problem goes away.</p>\n</blockquote>\n<h4 dir=\"auto\">Other behavioral differences</h4>\n<p dir=\"auto\">Because libxml2 does not follow the HTML5 parsing spec, sanitized documents often do not match our expectations. Sometimes this is unnoticeable, but other times it impacts application behavior.</p>\n<p dir=\"auto\">For a recent example of unexpected application behavior, see <a href=\"https://meta.discourse.org/t/markdown-preview-and-result-differ/263878/5\" rel=\"nofollow\">Markdown preview and result differ - bug - Discourse Meta</a>.</p>\n<h4 dir=\"auto\">The last mile</h4>\n<p dir=\"auto\">In any case, there's been a bunch of work that's led up to this PR:</p>\n<ul dir=\"auto\">\n<li>2021: add HTML5 support to Nokogiri - <a href=\"https://github.com/sparklemotion/nokogiri/issues/2204\" data-hovercard-type=\"issue\" data-hovercard-url=\"/sparklemotion/nokogiri/issues/2204/hovercard\">Epic: merge Nokogumbo into Nokogiri · Issue #2204 · sparklemotion/nokogiri</a></li>\n<li>2022: fix Nokogiri::HTML5 subclassing so that Loofah may inherit - <a href=\"https://github.com/sparklemotion/nokogiri/pull/2534\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/sparklemotion/nokogiri/pull/2534/hovercard\">html5 subclassing by flavorjones · Pull Request #2534 · sparklemotion/nokogiri</a></li>\n<li>2023: Loofah 2.21 released with HTML5 support - <a href=\"https://github.com/flavorjones/loofah/releases/tag/v2.21.0\">Release 2.21.0 / 2023-05-10 · flavorjones/loofah</a></li>\n<li>this morning: rails-html-sanitizer 1.6.0.rc1 supports HTML5 sanitizers - <a href=\"https://github.com/rails/rails-html-sanitizer/compare/v1.5.0...v1.6.0.rc1\">Comparing v1.5.0...v1.6.0.rc1 · rails/rails-html-sanitizer</a></li>\n</ul>\n<p dir=\"auto\">So, now that the rest of the sanitizer stack relied upon by Rails supports HTML5, it's time to update Rails to use it.</p>\n<h3 dir=\"auto\">Detail</h3>\n<ul dir=\"auto\">\n<li>Action View now depends on rails-html-sanitizer <code class=\"notranslate\">~&gt; 1.6</code></li>\n<li><code class=\"notranslate\">mattr_accessor</code> <code class=\"notranslate\">sanitizer_vendor</code> is added to <code class=\"notranslate\">ActionView::Helpers::SanitizeHelper</code></li>\n<li>new config value <code class=\"notranslate\">action_view.sanitizer_vendor</code> which in 7.0 config and earlier defaults to <code class=\"notranslate\">Rails::HTML4::Sanitizer</code></li>\n<li>7.1 config defaults <code class=\"notranslate\">action_view.sanitizer_vendor</code> to <code class=\"notranslate\">Rails::HTML5::Sanitizer</code></li>\n</ul>\n<p dir=\"auto\">(Note that the first push of this PR uses rails-html-sanitizer <code class=\"notranslate\">&gt;= 1.6.0.rc1</code> to do a full test before a 1.6.0 final release. I'll update that before it gets merged.)</p>\n<h3 dir=\"auto\">Additional information</h3>\n<p dir=\"auto\">There are a few places in Rails where <code class=\"notranslate\">Rails::Html::Sanitizer</code> is being referenced directly (without going through <code class=\"notranslate\">ActionView::Helpers::SanitizeHelper.sanitizer_vendor</code> or where <code class=\"notranslate\">Nokogiri::HTML</code> is being referenced directly. I haven't updated those callsites here, but intend to address them in a future PR so that HTML5 parsing becomes the default everywhere in Rails.</p>\n<p dir=\"auto\">The decision to pin Rails to <code class=\"notranslate\">rails-html-sanitizer</code> <code class=\"notranslate\">~&gt; 1.6</code>, which itself pins to <code class=\"notranslate\">nokogiri</code> <code class=\"notranslate\">~&gt; 1.14</code> and <code class=\"notranslate\">loofah</code> <code class=\"notranslate\">~&gt; 2.21</code> was made in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1718179352\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails-html-sanitizer/issues/166\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails-html-sanitizer/pull/166/hovercard\" href=\"https://github.com/rails/rails-html-sanitizer/pull/166\">rails/rails-html-sanitizer#166</a>. Note that this stack requires Ruby <code class=\"notranslate\">&gt;= 2.7</code> which is aligned with what Rails 7.1 looks like it's supporting.</p>\n<p dir=\"auto\">Finally, with respect to performance, the libgumbo HTML5 parser used by Nokogiri is slower than the libxml2 HTML4 parser, but these differences are swamped by the overhead of the <em>sanitization</em> pass that's done by rails-html-sanitizer scrubbers.</p>\n<details>\n<summary>Here's a benchmark that compares HTML4 and HTML5 performance on a variety of document sizes and that shows that the differences are well within the margin of error.</summary>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Warming up --------------------------------------\n    HTML4: 656 Bytes    60.000  i/100ms\n    HTML5: 656 Bytes    60.000  i/100ms\nCalculating -------------------------------------\n    HTML4: 656 Bytes    597.913  (± 1.5%) i/s -      3.000k in   5.032080s\n    HTML5: 656 Bytes    610.627  (± 1.3%) i/s -      3.060k in   5.021411s\n                   with 95.0% confidence\n\nComparison:\n    HTML5: 656 Bytes:      610.6 i/s\n    HTML4: 656 Bytes:      597.9 i/s - same-ish: difference falls within error\n                   with 95.0% confidence\n\nWarming up --------------------------------------\n      HTML4: 68.5 KB     2.000  i/100ms\n      HTML5: 68.5 KB     1.000  i/100ms\nCalculating -------------------------------------\n      HTML4: 68.5 KB     20.069  (± 4.9%) i/s -     98.000  in   5.018054s\n      HTML5: 68.5 KB     22.090  (± 5.4%) i/s -    103.000  in   5.032758s\n                   with 95.0% confidence\n\nComparison:\n      HTML5: 68.5 KB:       22.1 i/s\n      HTML4: 68.5 KB:       20.1 i/s - same-ish: difference falls within error\n                   with 95.0% confidence\n\nWarming up --------------------------------------\n       HTML4: 665 KB     1.000  i/100ms\n       HTML5: 665 KB     1.000  i/100ms\nCalculating -------------------------------------\n       HTML4: 665 KB      2.227  (±11.8%) i/s -     11.000  in   5.099994s\n       HTML5: 665 KB      2.286  (±10.4%) i/s -     12.000  in   5.406337s\n                   with 95.0% confidence\n\nComparison:\n       HTML5: 665 KB:        2.3 i/s\n       HTML4: 665 KB:        2.2 i/s - same-ish: difference falls within error\n                   with 95.0% confidence\"><pre class=\"notranslate\"><code class=\"notranslate\">Warming up --------------------------------------\n    HTML4: 656 Bytes    60.000  i/100ms\n    HTML5: 656 Bytes    60.000  i/100ms\nCalculating -------------------------------------\n    HTML4: 656 Bytes    597.913  (± 1.5%) i/s -      3.000k in   5.032080s\n    HTML5: 656 Bytes    610.627  (± 1.3%) i/s -      3.060k in   5.021411s\n                   with 95.0% confidence\n\nComparison:\n    HTML5: 656 Bytes:      610.6 i/s\n    HTML4: 656 Bytes:      597.9 i/s - same-ish: difference falls within error\n                   with 95.0% confidence\n\nWarming up --------------------------------------\n      HTML4: 68.5 KB     2.000  i/100ms\n      HTML5: 68.5 KB     1.000  i/100ms\nCalculating -------------------------------------\n      HTML4: 68.5 KB     20.069  (± 4.9%) i/s -     98.000  in   5.018054s\n      HTML5: 68.5 KB     22.090  (± 5.4%) i/s -    103.000  in   5.032758s\n                   with 95.0% confidence\n\nComparison:\n      HTML5: 68.5 KB:       22.1 i/s\n      HTML4: 68.5 KB:       20.1 i/s - same-ish: difference falls within error\n                   with 95.0% confidence\n\nWarming up --------------------------------------\n       HTML4: 665 KB     1.000  i/100ms\n       HTML5: 665 KB     1.000  i/100ms\nCalculating -------------------------------------\n       HTML4: 665 KB      2.227  (±11.8%) i/s -     11.000  in   5.099994s\n       HTML5: 665 KB      2.286  (±10.4%) i/s -     12.000  in   5.406337s\n                   with 95.0% confidence\n\nComparison:\n       HTML5: 665 KB:        2.3 i/s\n       HTML4: 665 KB:        2.2 i/s - same-ish: difference falls within error\n                   with 95.0% confidence\n</code></pre></div>\n</details>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48293",
            "title": "Update Action View to use sanitizers based on HTML5 parsing",
            "date_modified": "2023-05-24T19:57:31.000Z",
            "date_published": "2023-05-24T18:53:23.000Z",
            "author": {
                "name": "flavorjones",
                "url": "https://github.com/flavorjones"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/93276?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">This change is necessary to address a potential issue that could arise when a button or an input of type submit contains child elements, such as spans, icons, or other HTML elements.</p>\n<p dir=\"auto\">Currently, ActiveStorage's <code class=\"notranslate\">didClick</code> event listener checks the target of the click event to determine if a submit button was clicked. The target property of the event refers to the specific HTML element that was clicked.</p>\n<p dir=\"auto\">In cases where a submit button contains child elements, and one of these child elements is the element that actually gets clicked, the target would refer to this child element, not the button itself.</p>\n<p dir=\"auto\">Since the <code class=\"notranslate\">didClick</code> function checks if the target is a button or an input of type submit, this check would fail, and the button wouldn't be stored in <code class=\"notranslate\">submitButtonsByForm</code>.</p>\n<p dir=\"auto\">As a result, if the form is then submitted after a direct upload, the first submit button in the form could be incorrectly used to submit the form, even if a different button was originally clicked. This could cause unexpected behavior, as different submit buttons might be intended to trigger different actions on form submission.</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">By using the <code class=\"notranslate\">Element.closest()</code> method to find the nearest ancestor of the clicked element that is a button or an input of type submit, we ensure that the correct button is stored in <code class=\"notranslate\">submitButtonsByForm</code>, even if the click event was triggered by a child element of the button. This addresses the issue and ensures that the correct button is used to submit the form after a direct upload.</p>",
            "url": "https://github.com/rails/rails/pull/48290",
            "title": "Support nested elements inside <button>",
            "date_modified": "2023-05-24T15:22:12.000Z",
            "date_published": "2023-05-24T15:19:15.000Z",
            "author": {
                "name": "marckohlbrugge",
                "url": "https://github.com/marckohlbrugge"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/277819?u=f88292414deeecfd67fee18ae9d7297bcc001138&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Replace all occurrences of <code class=\"notranslate\">&lt;tt&gt;(\\w+::\\w+)&lt;/tt&gt;</code> with <code class=\"notranslate\">+$1+</code></p>\n<p dir=\"auto\">E.g.:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">&lt;tt&gt;ActiveRecord::Base&lt;/tt&gt;</code> -&gt; <code class=\"notranslate\">+ActiveRecord::Base+</code></li>\n</ul>\n<p dir=\"auto\">/cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/p8/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/p8\">@p8</a></p>",
            "url": "https://github.com/rails/rails/pull/48288",
            "title": "Use short-form fixed-width RDoc form for namespaces",
            "date_modified": "2023-05-24T13:33:08.000Z",
            "date_published": "2023-05-24T11:15:09.000Z",
            "author": {
                "name": "zzak",
                "url": "https://github.com/zzak"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/52599949?u=3a3e6f882db1807067702b1fee03636e352d3a3d&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">Currently, when<code class=\"notranslate\">invert_where</code> is called without any existing where conditions, it throws an error with invalid query.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Post.invert_where.to_sql\n#=&gt; SELECT &quot;posts&quot;.* FROM &quot;posts&quot; WHERE NOT ()\"><pre class=\"notranslate\"><code class=\"notranslate\">Post.invert_where.to_sql\n#=&gt; SELECT \"posts\".* FROM \"posts\" WHERE NOT ()\n</code></pre></div>\n<p dir=\"auto\">modified the <code class=\"notranslate\">invert_where</code> to return the receiver as is when there are no <code class=\"notranslate\">where</code> conditions to invert.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Post.order(:id).invert_where.to_sql\n#=&gt;  &quot;SELECT \\&quot;posts\\&quot;.* FROM \\&quot;posts\\&quot; ORDER BY \\&quot;posts\\&quot;.\\&quot;id\\&quot; ASC&quot;\"><pre class=\"notranslate\"><code class=\"notranslate\">Post.order(:id).invert_where.to_sql\n#=&gt;  \"SELECT \\\"posts\\\".* FROM \\\"posts\\\" ORDER BY \\\"posts\\\".\\\"id\\\" ASC\"\n</code></pre></div>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">When the method chain of <code class=\"notranslate\">ActiveRecord_Relation</code> includes an unintentional method such as <code class=\"notranslate\">unscope(:where)</code> and I use invert_where after that, unexpected errors occur.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"relation = Post.where(id: 2)\nrelation = relation.unscope(:where)\nrelation.invert_where\"><pre class=\"notranslate\"><code class=\"notranslate\">relation = Post.where(id: 2)\nrelation = relation.unscope(:where)\nrelation.invert_where\n</code></pre></div>\n<p dir=\"auto\">Also, this change has some kind of consistency with how <code class=\"notranslate\">unscope(:where)</code> behaves when there are no scopes defined, I think <g-emoji class=\"g-emoji\" alias=\"bowing_woman\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f647-2640.png\">🙇‍♀️</g-emoji></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Post.order(:id).unscope(:where)\n#=&gt; &quot;SELECT \\&quot;posts\\&quot;.* FROM \\&quot;posts\\&quot; ORDER BY \\&quot;posts\\&quot;.\\&quot;id\\&quot; ASC&quot;\"><pre class=\"notranslate\"><code class=\"notranslate\">Post.order(:id).unscope(:where)\n#=&gt; \"SELECT \\\"posts\\\".* FROM \\\"posts\\\" ORDER BY \\\"posts\\\".\\\"id\\\" ASC\"\n</code></pre></div>\n<h3 dir=\"auto\">Additional information</h3>\n\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48284",
            "title": "Fixing invert_where method to handle empty where conditions",
            "date_modified": "2023-05-24T15:28:04.000Z",
            "date_published": "2023-05-23T13:35:39.000Z",
            "author": {
                "name": "a5-stable",
                "url": "https://github.com/a5-stable"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/19192189?u=dd60737844a9db7f1475bab21fc3e5258a405e15&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">In my experience, to enable efficient handling of exceptions, network clients must clearly categorize their exceptions in two categories:</p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Network/Connection errors: whenever we didn't actually get a response from the server and perhaps the issue is transient and retrying now or later will work. e.g. Timeout, authentication error, DNS error, etc.</p>\n</li>\n<li>\n<p dir=\"auto\">Client errors: when the client did something wrong, and it's likely a bug in the user code and they should fix something. e.g. SQL Syntax error, unkown column, etc.</p>\n</li>\n</ul>\n<p dir=\"auto\">Such categorization allows for better automated handling of exceptions, like retrying or not, sending the exception to a reporting service or just emitting a health metric, etc.</p>\n<p dir=\"auto\">Historically Active Record was quite bad at translating the underlying adapter errors into clean errors of its own, and lots of network related errors were translated into <code class=\"notranslate\">SatementInvalid</code> as a big catch all.</p>\n<p dir=\"auto\">In 2019 we started better tranlating these errors (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"468823980\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/36692\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/36692/hovercard\" href=\"https://github.com/rails/rails/pull/36692\">#36692</a>, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"468847665\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/36694\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/36694/hovercard\" href=\"https://github.com/rails/rails/pull/36694\">#36694</a>) but for backward compatibility reasons these new errors still inherited from <code class=\"notranslate\">StatementInvalid</code>.</p>\n<p dir=\"auto\">I think now would be a good time to consider fixing this historical cruft.</p>\n<p dir=\"auto\">Note: opening as a draft as this PR isn't necessarily exactly what I want to change, I'm more interested in gathering thoughts from interested parties.</p>\n<p dir=\"auto\">cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/matthewd/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/matthewd\">@matthewd</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/eileencodes/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/eileencodes\">@eileencodes</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/rafaelfranca/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rafaelfranca\">@rafaelfranca</a> any opinions?</p>",
            "url": "https://github.com/rails/rails/pull/48280",
            "title": "ActiveRecord: make query timeout errors inherit from the base connection error",
            "date_modified": "2023-05-23T10:57:55.000Z",
            "date_published": "2023-05-23T08:35:46.000Z",
            "author": {
                "name": "casperisfine",
                "url": "https://github.com/casperisfine"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/75765648?u=1dc3ffb2f347af44627baa665b1b2dff0abd7dd1&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<h3 dir=\"auto\">Motivation / Background</h3>\n\n<p dir=\"auto\">Currently, when using the in_batches method on a model with composite primary keys (id_1, id_2), if :asc(:desc) is specified for the order argument, the values are returned with both id_1 and id_2 sorted in ascending (descending) order.<br>\nAllow selection of ascending or descending order for each key in composite primary key.</p>\n<p dir=\"auto\">EXAMPLE</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"class Order &lt; ActiveRecord::Base\n  self.primary_key = [:id_1, :id_2]\nend\nOrder.find_each(order: [:asc, :desc])\"><pre class=\"notranslate\"><code class=\"notranslate\">class Order &lt; ActiveRecord::Base\n  self.primary_key = [:id_1, :id_2]\nend\nOrder.find_each(order: [:asc, :desc])\n</code></pre></div>\n<p dir=\"auto\">In the above code, id_1 is sorted in ascending order, id_2 in descending</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">This Pull Request changes [REPLACE ME]</p>\n<h3 dir=\"auto\">Additional information</h3>\n\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48268",
            "title": "Support batching using composite primary keys and multiple column ordering",
            "date_modified": "2023-05-24T18:56:51.000Z",
            "date_published": "2023-05-21T08:49:23.000Z",
            "author": {
                "name": "TakuyaKurimoto",
                "url": "https://github.com/TakuyaKurimoto"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/75765648?u=1dc3ffb2f347af44627baa665b1b2dff0abd7dd1&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Fixed incorrect sorting using order keyword in in_batches method</p>\n\n<h3 dir=\"auto\">Motivation / Background</h3>\n\n<p dir=\"auto\">Fix incorrect sorting using order keyword in in_batches method.</p>\n<p dir=\"auto\">example (posts table has id as the primary key)</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Post.in_batches(order: :desc, use_ranges: false).first.pluck(:id)\n:actual =&gt; [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n:expected  =&gt; [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]\"><pre class=\"notranslate\"><code class=\"notranslate\">Post.in_batches(order: :desc, use_ranges: false).first.pluck(:id)\n:actual =&gt; [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n:expected  =&gt; [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]\n</code></pre></div>\n<h3 dir=\"auto\">Detail</h3>\n<h3 dir=\"auto\">Additional information</h3>\n<p dir=\"auto\">if use_ranges keyword is true, the sorting does not work either, but I am not sure if this is the expected behavior</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48267",
            "title": "FIX correctly sort records with the in_batches method",
            "date_modified": "2023-05-21T06:18:07.000Z",
            "date_published": "2023-05-21T06:17:51.000Z",
            "author": {
                "name": "TakuyaKurimoto",
                "url": "https://github.com/TakuyaKurimoto"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/419086?u=d0fe8d6b68a77ff6fc46bd57cbc2a37db85a6d34&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">In migrations, the <code class=\"notranslate\">up_only</code> helper and the <code class=\"notranslate\">reverting?</code> predicate allow constraining operations in either direction. Adding <code class=\"notranslate\">down_only</code> and <code class=\"notranslate\">migrating?</code> allows defining blocks that need to run when reverting, or running one-liners when migrating without using double negatives. Plus, you no longer need to remember which ones exist and which ones don't.</p>\n\n<p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #48245.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1713995776\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/48245\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rails/rails/issues/48245/hovercard\" href=\"https://github.com/rails/rails/issues/48245\">#48245</a></p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">This Pull Request adds <code class=\"notranslate\">down_only</code> and <code class=\"notranslate\">migrating?</code>.</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature. (Original methods are not tested)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48263",
            "title": "Add down only and migrating helpers to migration",
            "date_modified": "2023-05-22T13:40:31.000Z",
            "date_published": "2023-05-20T12:27:00.000Z",
            "author": {
                "name": "goulvench",
                "url": "https://github.com/goulvench"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/984854?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">Postgres and SQLite both support a non-standard extension to the CTE syntax to indicate that a CTE subquery should be materialized, i.e., not folded into the main query but evaluated separately. This can be useful in cases where the query planner would otherwise make poor decisions.</p>\n<p dir=\"auto\">The syntax, in both databases, is:<br>\n<code class=\"notranslate\">WITH foo AS MATERIALIZED (...) ...</code></p>\n<p dir=\"auto\">Similarly, they support an explicit hint that a CTE should <em>not</em> be materialized:<br>\n<code class=\"notranslate\">WITH foo AS NOT MATERIALIZED (...) ...</code></p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">This Pull Request adds <code class=\"notranslate\">Arel::Nodes::Cte</code>, which represents a CTE query and contains an alias, a relation, and a materialization flag. The latter is either <code class=\"notranslate\">true</code> to request materialization, <code class=\"notranslate\">false</code> to request no materialization, or <code class=\"notranslate\">nil</code> which omits any materialization hint. The node can be used like so:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"    posts = Arel::Table.new(:posts)\n    comments = Arel::Table.new(:comments)\n\n    good_comments_query = comments.project(Arel.star).where(comments[:rating].gt(7))\n    cte = Arel::Nodes::Cte.new(:good_comments, good_comments_query, materialized: true)\n\n    query = posts.\n      project(Arel.star).\n      with(cte).\n      where(posts[:id].in(cte.to_table.project(:post_id))).\n\n    puts query.to_sql\n\n    # WITH &quot;good_comments&quot; AS MATERIALIZED (SELECT * FROM &quot;comments&quot; WHERE &quot;comments&quot;.&quot;rating&quot; &gt; 7) SELECT * FROM &quot;posts&quot; WHERE &quot;posts&quot;.&quot;id&quot; IN (SELECT post_id FROM &quot;good_comments&quot;)\"><pre class=\"notranslate\">    <span class=\"pl-s1\">posts</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Arel</span>::<span class=\"pl-v\">Table</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">new</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">:posts</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-s1\">comments</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Arel</span>::<span class=\"pl-v\">Table</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">new</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">:comments</span><span class=\"pl-kos\">)</span>\n\n    <span class=\"pl-s1\">good_comments_query</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">comments</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">project</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Arel</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">star</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">where</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">comments</span><span class=\"pl-kos\">[</span><span class=\"pl-pds\">:rating</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">gt</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">7</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-s1\">cte</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Arel</span>::<span class=\"pl-v\">Nodes</span>::<span class=\"pl-v\">Cte</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">new</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">:good_comments</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">good_comments_query</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">materialized</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">)</span>\n\n    <span class=\"pl-s1\">query</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">posts</span><span class=\"pl-kos\">.</span>\n      <span class=\"pl-en\">project</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Arel</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">star</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span>\n      <span class=\"pl-en\">with</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">cte</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span>\n      <span class=\"pl-en\">where</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">posts</span><span class=\"pl-kos\">[</span><span class=\"pl-pds\">:id</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">in</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">cte</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">to_table</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">project</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">:post_id</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span>\n\n    <span class=\"pl-en\">puts</span> <span class=\"pl-s1\">query</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">to_sql</span>\n\n    <span class=\"pl-c\"># WITH \"good_comments\" AS MATERIALIZED (SELECT * FROM \"comments\" WHERE \"comments\".\"rating\" &gt; 7) SELECT * FROM \"posts\" WHERE \"posts\".\"id\" IN (SELECT post_id FROM \"good_comments\")</span></pre></div>\n<p dir=\"auto\"><code class=\"notranslate\">As</code> and <code class=\"notranslate\">TableAlias</code> nodes continue to be supported as arguments to <code class=\"notranslate\">SelectManager#with</code>.</p>\n<h3 dir=\"auto\">Additional information</h3>\n<p dir=\"auto\">This is an alternative to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1669201616\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/47951\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/47951/hovercard\" href=\"https://github.com/rails/rails/pull/47951\">#47951</a>, following <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/matthewd/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/matthewd\">@matthewd</a>'s suggestion of adding a <code class=\"notranslate\">Cte</code> node that contains both an alias and a relation, instead of adding a node just to represent the addition of the <code class=\"notranslate\">MATERIALIZED</code> keyword. This keeps the syntax tree shallower and allows us easily to support <code class=\"notranslate\">NOT MATERIALIZED</code> hints without needing to resort to yet another keyword-specific node type or deeper nesting of nodes.</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48261",
            "title": "Adds Arel::Nodes::Cte for use in WITH expressions",
            "date_modified": "2023-05-19T23:07:01.000Z",
            "date_published": "2023-05-19T23:05:03.000Z",
            "author": {
                "name": "97jaz",
                "url": "https://github.com/97jaz"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/22918438?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">Certain applications (e.g. Shopify, GitHub), retry all database queries and have been patching <code class=\"notranslate\">#execute</code> / <code class=\"notranslate\">#raw_execute</code> to change the <code class=\"notranslate\">allow_retry</code> kwarg to true. This is brittle. Enabling retries globally should be an option for apps that are willing to accept the risks.</p>\n<h3 dir=\"auto\">Additional information</h3>\n<p dir=\"auto\">Wondering if it's safe to retry transaction-related db methods (e.g. <code class=\"notranslate\">#commit_db_transaction</code>, <code class=\"notranslate\">#exec_restart_db_transaction</code>). As it stands, Shopify's retry patch <em>will</em> retry all of these queries, but our retry patch used to be transaction-aware. Should we stick to avoiding retries, even if the the application has configured retries globally, with these methods or are they fine to retry?</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>\n<p dir=\"auto\">cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/eileencodes/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/eileencodes\">@eileencodes</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/rafaelfranca/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rafaelfranca\">@rafaelfranca</a></p>",
            "url": "https://github.com/rails/rails/pull/48247",
            "title": "Introduce Active Record config to enable database queries to be retried",
            "date_modified": "2023-05-22T16:04:21.000Z",
            "date_published": "2023-05-17T15:26:51.000Z",
            "author": {
                "name": "adrianna-chang-shopify",
                "url": "https://github.com/adrianna-chang-shopify"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/110363331?u=c550f969fbc210d0495a428fa75e6bb29b3ea029&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">This is what the file said.</p>\n<p dir=\"auto\"><code class=\"notranslate\">TODO: Consider renaming this method, as it only conditionally extends keys, not always</code>,</p>\n<p dir=\"auto\">so I changed the method name.</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">Removed the <code class=\"notranslate\">TODO:</code> and renamed it to the <code class=\"notranslate\">append_if_exist_keys_including_timestamps</code>.</p>\n<h3 dir=\"auto\">Additional information</h3>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48244",
            "title": "Fix method name for `InsertAll#keys_including_timestamps`",
            "date_modified": "2023-05-18T00:34:49.000Z",
            "date_published": "2023-05-17T10:32:51.000Z",
            "author": {
                "name": "asberel",
                "url": "https://github.com/asberel"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5512772?u=bbae6d87b3499e6b3662664cf4be0e84cc40f6d2&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This commit extends Active Record creation logic to allow for an auto-incremented column to be populated even if it's not being used as a whole or a part of the primary key.</p>\n<p dir=\"auto\">Given a <code class=\"notranslate\">Post</code> model represented by the following schema:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"create_table :posts, id: false do |t|\n  t.integer :sequential_number, auto_increment: true\n  t.string :title, primary_key: true\nend\"><pre class=\"notranslate\"><span class=\"pl-en\">create_table</span> <span class=\"pl-pds\">:posts</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">id</span>: <span class=\"pl-c1\">false</span> <span class=\"pl-k\">do</span> |<span class=\"pl-s1\">t</span>|\n  <span class=\"pl-s1\">t</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">integer</span> <span class=\"pl-pds\">:sequential_number</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">auto_increment</span>: <span class=\"pl-c1\">true</span>\n  <span class=\"pl-s1\">t</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">string</span> <span class=\"pl-pds\">:title</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">primary_key</span>: <span class=\"pl-c1\">true</span>\n<span class=\"pl-k\">end</span></pre></div>\n<p dir=\"auto\">where <code class=\"notranslate\">title</code> is being used as a primary key and the table has an integer <code class=\"notranslate\">sequential_number</code> column populated by a sequence, creation of <code class=\"notranslate\">Post</code> records should populate the <code class=\"notranslate\">sequential_number</code> attribute:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"new_post = Post.create(title: 'My first post')\nnew_post.sequential_number # =&gt; 1\"><pre class=\"notranslate\"><span class=\"pl-s1\">new_post</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">Post</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">create</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">title</span>: <span class=\"pl-s\">'My first post'</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-s1\">new_post</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">sequential_number</span> <span class=\"pl-c\"># =&gt; 1</span></pre></div>\n<h3 dir=\"auto\">Implementation details</h3>\n<p dir=\"auto\">Overall solution is trying to be generic and extensible to allow for additions while still maintains the fact that currently Rails only populates a single column and only if the column</p>\n<ul dir=\"auto\">\n<li>The most important change I'd like to bring the most attention to is the method signature change for both <code class=\"notranslate\">exec_insert</code> and <code class=\"notranslate\">insert</code> public methods. We are adding a new <code class=\"notranslate\">returning_columns</code> keyword argument with a default value with an intention for the argument to be undocumented  until Rails is ready to support populating more than one column. If keeping an undocumented optional argument is not an option then we'll have to consider defining a new method like <code class=\"notranslate\">DatabaseStatements#insert_with_returning</code> as we can't change <code class=\"notranslate\">insert</code> signature to return more than one value without a deprecation cycle.</li>\n<li><code class=\"notranslate\">ConnectionAdapters::Column</code> gets a new adapter-abstract attribute called <code class=\"notranslate\">auto_incremented_by_db?</code> which indicates whether a given column is being auto-incremented by the database regardless of the way it's being incremented. For mysql we alias it to <code class=\"notranslate\">auto_increment</code> and for postgresql we alias it to <code class=\"notranslate\">serial</code>.</li>\n<li><code class=\"notranslate\">ModelSchema._auto_populated_column_names</code> has been added to gather a list of columns that are either auto-incremented or populated by a default function. It may not be a complete list but it should cover most of the scenarios and sufficient as long as at this point we only looking on a single column in <code class=\"notranslate\">_create_record</code>. Perhaps the <code class=\"notranslate\">Column</code> class itself could have had a <code class=\"notranslate\">auto_populated_by_database?</code> method which could combine the auto-increment and default function checks but we can add this later as a refactoring</li>\n<li><code class=\"notranslate\">_create_record</code> uses <code class=\"notranslate\">_auto_populated_column_names</code> but fetches only one column as <code class=\"notranslate\">insert</code> signature is only capable of returning a single value. <code class=\"notranslate\">primary_key</code> take precedence when choosing the column to populate.</li>\n</ul>\n<p dir=\"auto\">If the change seems too risky for existing models we could consider limiting the change to the composite primary keys models only</p>\n<h3 dir=\"auto\">Long term plans</h3>\n<p dir=\"auto\">Long term we should be looking into extending the capability to be able to populate any number of auto-populated db columns after creation. For postgresql it will be done using the <code class=\"notranslate\">RETURNING</code> statement but MySQL will require an additional <code class=\"notranslate\">SELECT</code> query to be performed to fetch values for every auto-populated columns. An additional query may not be desirable for every application so the behavior should be configurable which brings more complexity and one of the reasons why we are not trying to tackle it all at once. Though for postgresql it's simpler so perhaps we could start supporting postgresql first and add mysql support later.</p>",
            "url": "https://github.com/rails/rails/pull/48241",
            "title": " Fill auto incremented column for models with CPK",
            "date_modified": "2023-05-24T15:57:45.000Z",
            "date_published": "2023-05-16T21:00:17.000Z",
            "author": {
                "name": "nvasilevski",
                "url": "https://github.com/nvasilevski"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/9117775?u=c5242a1b05e8272b9475a772e76fb3c5a7177445&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Please consider viewing the diff with whitespace disabled: <a href=\"https://github.com/rails/rails/pull/48224/files?w=1\">https://github.com/rails/rails/pull/48224/files?w=1</a></p>\n<h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">A proposal for a way to improve the fix for <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1699572304\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/48164\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rails/rails/issues/48164/hovercard\" href=\"https://github.com/rails/rails/issues/48164\">#48164</a> which was added in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1707080058\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/48200\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/48200/hovercard\" href=\"https://github.com/rails/rails/pull/48200\">#48200</a>. Please see <a href=\"https://github.com/rails/rails/issues/48164#issuecomment-1544018445\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rails/rails/issues/48164/hovercard\">this discussion</a>.</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">Introduces the concept of a transaction lock. This is used to detect cases where <code class=\"notranslate\">within_new_transaction</code> raises, potentially leaving the connection in a transaction, and the attempt to discard the connection fails.</p>\n<p dir=\"auto\">The idea is to store and acquire a new lock before attempting to begin a transaction, and to only discard the lock once the transaction state is definitely known. If <code class=\"notranslate\">within_new_transaction</code> raises, without the lock being discarded, subsequent attempts to create a transaction will detect this and discard the connection.</p>\n<p dir=\"auto\">Note that no such check is performed in other methods which may use a connection in an unknown transaction state. For instance, it will still be possible to invoke <code class=\"notranslate\">execute</code>. In case this change ends up being acceptable, such checks could be added.</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48224",
            "title": "Use locks to detect connections which are in an unknown transaction state",
            "date_modified": "2023-05-17T05:09:27.000Z",
            "date_published": "2023-05-14T06:22:20.000Z",
            "author": {
                "name": "nicholasdower",
                "url": "https://github.com/nicholasdower"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1518299?u=a2dd8dd1835679cfd6b1924ef63a6e61ea62fa2a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #48185.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1703067636\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/48185\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rails/rails/issues/48185/hovercard\" href=\"https://github.com/rails/rails/issues/48185\">#48185</a></p>\n<p dir=\"auto\">Action Cable can be mounted standalone, but it loses the health check route provided by the railties.<br>\nThis change adds configuration for a health check rack app and a health check route to \"mount\" the rack app.</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48222",
            "title": "Add health check on standalone Action Cable",
            "date_modified": "2023-05-15T23:49:20.000Z",
            "date_published": "2023-05-13T23:44:05.000Z",
            "author": {
                "name": "JoeDupuis",
                "url": "https://github.com/JoeDupuis"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/277819?u=f88292414deeecfd67fee18ae9d7297bcc001138&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Alternative to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1646855043\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/47813\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/47813/hovercard\" href=\"https://github.com/rails/rails/pull/47813\">#47813</a> to import the linter files directly to Rails source tree</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ zzak@mbp16 rails % ruby -v\nruby 3.2.2 (2023-03-30 revision e51014f9c0) [arm64-darwin22]\n\n\n\n$ zzak@mbp16 rails % bundle exec tools/check-changelogs .\n.............\n\n13 changelogs inspected, 0 offenses detected\n\n\n\n$ zzak@mbp16 rails % bundle exec tools/check-config-docs .\n\n\n\n$ zzak@mbp16 rails % bundle exec tools/check-links .\nhttps://edgeapi.rubyonrails.org/classes/ActiveSupport/MessageEncryptor.html#method-i-encrypt_and_sign\"><pre class=\"notranslate\">$ zzak@mbp16 rails % ruby -v\nruby 3.2.2 (2023-03-30 revision e51014f9c0) [arm64-darwin22]\n\n\n\n$ zzak@mbp16 rails % bundle <span class=\"pl-c1\">exec</span> tools/check-changelogs <span class=\"pl-c1\">.</span>\n.............\n\n13 changelogs inspected, 0 offenses detected\n\n\n\n$ zzak@mbp16 rails % bundle <span class=\"pl-c1\">exec</span> tools/check-config-docs <span class=\"pl-c1\">.</span>\n\n\n\n$ zzak@mbp16 rails % bundle <span class=\"pl-c1\">exec</span> tools/check-links <span class=\"pl-c1\">.</span>\nhttps://edgeapi.rubyonrails.org/classes/ActiveSupport/MessageEncryptor.html#method-i-encrypt_and_sign</pre></div>",
            "url": "https://github.com/rails/rails/pull/48216",
            "title": "Import rails-bin linter to rails internal tools lib",
            "date_modified": "2023-05-16T17:36:25.000Z",
            "date_published": "2023-05-13T06:53:46.000Z",
            "author": {
                "name": "zzak",
                "url": "https://github.com/zzak"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/277819?u=f88292414deeecfd67fee18ae9d7297bcc001138&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">We want a way to be able to audit the public API of Rails, and find things that are missing <code class=\"notranslate\">:nodoc:</code>.</p>\n<p dir=\"auto\">This was implemented in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1707161137\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/sdoc/issues/222\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/sdoc/pull/222/hovercard\" href=\"https://github.com/rails/sdoc/pull/222\">rails/sdoc#222</a>, and we're pulling in the latest branch to use it here.</p>\n<p dir=\"auto\">In the future we might want a way to diff this data in some way, for example to provide PRs with feedback that introduce new classes or methods for reviewers to quickly check.</p>",
            "url": "https://github.com/rails/rails/pull/48202",
            "title": "Add namelist rake task",
            "date_modified": "2023-05-23T11:31:42.000Z",
            "date_published": "2023-05-12T08:19:42.000Z",
            "author": {
                "name": "zzak",
                "url": "https://github.com/zzak"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1518299?u=a2dd8dd1835679cfd6b1924ef63a6e61ea62fa2a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #48013.\">Fix</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1678979503\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/48013\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rails/rails/issues/48013/hovercard\" href=\"https://github.com/rails/rails/issues/48013\">#48013</a></p>\n<p dir=\"auto\">If two routes end up with the same score when trying to recall the url from url_for, we currently pick the one with highest precedence (order of the route file).</p>\n<p dir=\"auto\">This change bumps the current route (if matched) in front of the others.</p>\n<p dir=\"auto\">The repro for the issue could help understand what this is trying to fix: <a href=\"https://gist.github.com/JoeDupuis/e0f18020c85a05d5188ee35485685387\">https://gist.github.com/JoeDupuis/e0f18020c85a05d5188ee35485685387</a></p>\n<h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #48013.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1678979503\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/48013\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rails/rails/issues/48013/hovercard\" href=\"https://github.com/rails/rails/issues/48013\">#48013</a></p>\n<p dir=\"auto\">We are already trying to recall the current request with <code class=\"notranslate\">url_for</code>, this helps recalling the correct route when there is multiple hit.</p>\n<p dir=\"auto\">Currently, only the router knows which route is served. This adds the current route in the rack env allowing class further in the request to infer things from it.</p>\n<h3 dir=\"auto\">Detail</h3>\n<ul dir=\"auto\">\n<li>I don't know if we should merge this. I could see it as confusing if someone is calling url_for in the context of a request vs outside of a request (test or mailer). But then again, <a href=\"https://github.com/rails/rails/issues/48013\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rails/rails/issues/48013/hovercard\">it's also confusing to users if we don't</a>.</li>\n</ul>\n<h3 dir=\"auto\">Additional information</h3>\n<p dir=\"auto\">A bit of fun trivia. The current (7.0.4.2) guide for <code class=\"notranslate\">ActionController::UrlFor</code> mention:</p>\n<blockquote>\n<p dir=\"auto\">This module requires the host class to implement env which needs to be Rack-compatible and request which is either an instance of ActionDispatch::Request <strong>or an object that responds to the host, optional_port, protocol, and symbolized_path_parameter methods.</strong></p>\n</blockquote>\n<p dir=\"auto\">Which led me to write an initial version of this where I was checking if the request object responds to <code class=\"notranslate\">current_route</code> to make sure the code would still work if the request is not an <code class=\"notranslate\">ActionDispatch::Request</code>.</p>\n<p dir=\"auto\">Then I noticed while reading the same doc through the code that <a href=\"https://github.com/rails/rails/commit/d69501a3d60f07dc68578278041ed74682084c9a\">this was changed</a> and I was unnecessarily playing hard mode <g-emoji class=\"g-emoji\" alias=\"man_facepalming\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f926-2642.png\">🤦‍♂️</g-emoji> <g-emoji class=\"g-emoji\" alias=\"laughing\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f606.png\">😆</g-emoji></p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48201",
            "title": "Allow url_for to prioritize the current route on ambiguous recall.",
            "date_modified": "2023-05-14T03:41:25.000Z",
            "date_published": "2023-05-12T07:27:29.000Z",
            "author": {
                "name": "JoeDupuis",
                "url": "https://github.com/JoeDupuis"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1518299?u=a2dd8dd1835679cfd6b1924ef63a6e61ea62fa2a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/rails/rails/commit/e68bfaf1fe1a7890a67af6f444281185f507cf9e#diff-8b09ea0c52da5a4c3aa0eadbe23c3df5e77cbdb850f04fde04fd1e30b7e010ce\">UrlRewriter was removed in 2010</a> The <code class=\"notranslate\">url_rewriter_test.rb</code> stuck around. Now, it is really just testing <code class=\"notranslate\">url_for</code>.  Most of the tests are identical.</p>\n<p dir=\"auto\">Some tests in <code class=\"notranslate\">url_rewriter_test.rb</code> were missing in the <code class=\"notranslate\">url_for</code> spec so I moved them.</p>\n<h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">Hoping to save a spelunking trip for the next person who works around <code class=\"notranslate\">url_for</code> <g-emoji class=\"g-emoji\" alias=\"grin\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f601.png\">😁</g-emoji></p>\n<p dir=\"auto\">I am working on a couple of PRs and was trying to make sense of some of the tests. I found these redundant and confusing. Then with a bit of digging I realized there used to be a <code class=\"notranslate\">UrlRewriter</code> class.</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG -- N/A</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48199",
            "title": "Remove UrlRewriter tests",
            "date_modified": "2023-05-14T03:42:08.000Z",
            "date_published": "2023-05-12T04:29:15.000Z",
            "author": {
                "name": "JoeDupuis",
                "url": "https://github.com/JoeDupuis"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/28561?u=095779352a57f75e734987829f3f67a10e5780ed&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Active Model generates methods for each attribute to handle dirty changes. As these methods are generated and depend on the attributes in the model, they can't be found when searching for them in the API documentation.</p>\n<p dir=\"auto\">We can use the <code class=\"notranslate\">:method:</code> directive to document them in the form of <code class=\"notranslate\">[attribute]_will_change</code>, <code class=\"notranslate\">[attribute_name]_previously_was</code>, etc. This notation is <a href=\"https://github.com/rails/rails/blob/cb1073e664c41c3c4c87dee4788cc2a326247b4f/activemodel/lib/active_model/dirty.rb#L112\">already used</a> in the documentation of ActiveModel::Dirty.</p>\n<p dir=\"auto\">An alternative could be documenting the methods as: <code class=\"notranslate\">*_will_change</code>, <code class=\"notranslate\">*_previously_was</code>, etc...</p>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/28561/237787512-af5b48e5-901a-4596-8890-041b78d05611.png\"><img width=\"1339\" alt=\"image\" src=\"https://user-images.githubusercontent.com/28561/237787512-af5b48e5-901a-4596-8890-041b78d05611.png\" style=\"max-width: 100%;\"></a>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48193",
            "title": "Document generated dirty attribute methods [ci-skip]",
            "date_modified": "2023-05-12T21:41:33.000Z",
            "date_published": "2023-05-11T17:53:05.000Z",
            "author": {
                "name": "p8",
                "url": "https://github.com/p8"
            }
        }
    ]
}