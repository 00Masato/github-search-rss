{
    "version": "https://jsonfeed.org/version/1",
    "title": "rails/rails pr",
    "home_page_url": "https://00masato.github.io/github-search-rss/rails-pr.json",
    "feed_url": "https://00masato.github.io/github-search-rss/rails-pr.json",
    "description": "rails/rails pr on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/6142?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">It can remove hundreds of lines of deprecation warning backtraces from spamming the console or the logs.  It maintains forward compatibility with the <code class=\"notranslate\">pg</code> gem, which will eventually require the new behavior.</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">It's very small: just a single <code class=\"notranslate\">**</code> for some keyword args.</p>\n<h3 dir=\"auto\">Additional information</h3>\n<ul dir=\"auto\">\n<li>See the original issue for more context: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1680963007\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/48046\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rails/rails/issues/48046/hovercard\" href=\"https://github.com/rails/rails/issues/48046\">#48046</a></li>\n<li>Backported PR: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1681132170\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/48048\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/48048/hovercard\" href=\"https://github.com/rails/rails/pull/48048\">#48048</a> (from tiramizoo/pg-1-5-warning)</li>\n</ul>\n<h3 dir=\"auto\">Checklist</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48435",
            "title": "Backport: Fix the pg 1.5.0 deprecation warning",
            "date_modified": "2023-06-09T16:59:32.000Z",
            "date_published": "2023-06-09T16:55:15.000Z",
            "author": {
                "name": "nevans",
                "url": "https://github.com/nevans"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/15172605?u=c9831ccf188358c7be46eb4c634002b47ebb1068&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">PR <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1712735611\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/48241\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/48241/hovercard\" href=\"https://github.com/rails/rails/pull/48241\">#48241</a> detects when certain auto-populated columns should be appended to a <code class=\"notranslate\">RETURNING</code> clause. However, in certain cases it may be necessary for the application to explicitly specify additional columns. e.g. Database Triggers.</p>\n<p dir=\"auto\">This feature was discussed in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1326221102\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/45736\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rails/rails/issues/45736/hovercard\" href=\"https://github.com/rails/rails/issues/45736\">#45736</a> and briefly with Matthew Draper in the Discord channel.</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">This PR adds the ability for the application to specify those attributes with the <code class=\"notranslate\">returning_on_create</code> class method.</p>\n<h3 dir=\"auto\">Additional information</h3>\n<p dir=\"auto\">Additionally a very minor edge case was handled. The application could try to assign a value to a virtual column which essentially results in a no-op. The values persisted in the database would be the same regardless. However, in doing so the value from <code class=\"notranslate\">RETURNING</code> wasn't being reflected on the instance attributes after create. See the newly added test and removal of the <code class=\"notranslate\">_read_attribute</code> check.</p>\n<p dir=\"auto\">Performing this nil check with <code class=\"notranslate\">_read_attribute</code> will also not be compatible when <code class=\"notranslate\">RETURNING</code> is implemented on <code class=\"notranslate\">UPDATE</code>.  As it is expected that the instance's attributes will be prepopulated with non-nil values. (WIP here: <a href=\"https://github.com/abaldwin88/rails/tree/virtual_stored_column_returning_on_update\">https://github.com/abaldwin88/rails/tree/virtual_stored_column_returning_on_update</a>)</p>\n<hr>\n<p dir=\"auto\">Paging: <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/nvasilevski/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/nvasilevski\">@nvasilevski</a></p>",
            "url": "https://github.com/rails/rails/pull/48434",
            "title": "Add `ActiveRecord.returning_on_create` to specify attributes in SQL `RETURNING`",
            "date_modified": "2023-06-09T18:06:33.000Z",
            "date_published": "2023-06-09T16:30:33.000Z",
            "author": {
                "name": "abaldwin88",
                "url": "https://github.com/abaldwin88"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5512772?u=bbae6d87b3499e6b3662664cf4be0e84cc40f6d2&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><code class=\"notranslate\">Trilogy</code> adapter has a custom implementation of <code class=\"notranslate\">exec_insert</code> method which is a complete duplication of the abstract <code class=\"notranslate\">exec_insert</code> with the <strong>only difference</strong>:  Trilogy's exec insert used to return an unwrapped result while abstract implementation returns <code class=\"notranslate\">ActiveRecord::Result</code>. Though we believe it goes against the method signature as trilogy result and <code class=\"notranslate\">AR::Result</code> do not implement the same interface. Changing the result type to be Active Record result causes only one issue - <code class=\"notranslate\">last_insert_method</code> can not fetch the last inserted id value from <code class=\"notranslate\">ActiveRecord::Result</code> as it doesn't provide such value.  In order to address it we are introducing a new <code class=\"notranslate\">ActiveRecord::TrilogyResult</code> class which is a child class of <code class=\"notranslate\">Result</code> with the only difference - it implements <code class=\"notranslate\">last_insert_id</code> to be used by the <code class=\"notranslate\">last_inserted_id</code> method. The <code class=\"notranslate\">Result</code> itself had to be extended to store the reference to the <code class=\"notranslate\">raw_result</code></p>\n<h3 dir=\"auto\">Alternative solutions for <code class=\"notranslate\">last_inserted_id</code></h3>\n<ol dir=\"auto\">\n<li>Instead of introducing new <code class=\"notranslate\">TrilogyResult</code> class we could have added <code class=\"notranslate\">last_inserted_id</code> method directly to the <code class=\"notranslate\">Result</code> but it doesn't seem correct as not every adapter has such concept as <code class=\"notranslate\">last_inserted_id</code>. For example being able to call <code class=\"notranslate\">last_inserted_id</code> when using <code class=\"notranslate\">PostgresqlAdapter</code> won't make much sense.</li>\n<li>We could have done the same what <code class=\"notranslate\">mysql2</code> adapter does - reach into <code class=\"notranslate\">@connection</code> to get the value:<br>\n<div class=\"Box Box--condensed my-2\">\n  <div class=\"Box-header f6\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/rails/rails/blob/2a904bf58828e79c10e7838cb5a7550f8a1b5581/activerecord/lib/active_record/connection_adapters/mysql2/database_statements.rb#L69\">rails/activerecord/lib/active_record/connection_adapters/mysql2/database_statements.rb</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 69\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/rails/rails/commit/2a904bf58828e79c10e7838cb5a7550f8a1b5581\">2a904bf</a>\n    </p>\n  </div>\n  <div itemprop=\"text\" class=\"Box-body p-0 blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L69\" class=\"blob-num border-0 px-3 py-0 color-bg-default\" data-line-number=\"69\"></td>\n          <td id=\"LC69\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c1\">@raw_connection</span>&amp;.<span class=\"pl-en\">last_id</span> </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n as Trilogy raw connection also provides <code class=\"notranslate\">last_insert_id</code> method. Though it feels much lower-level to reach into the raw connection and relying on <code class=\"notranslate\">Result</code> seems to be a much better abstraction</li>\n</ol>",
            "url": "https://github.com/rails/rails/pull/48428",
            "title": "Remove custom `exec_insert` method from Trilogy adapter",
            "date_modified": "2023-06-09T06:10:42.000Z",
            "date_published": "2023-06-09T01:16:25.000Z",
            "author": {
                "name": "nvasilevski",
                "url": "https://github.com/nvasilevski"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5512772?u=bbae6d87b3499e6b3662664cf4be0e84cc40f6d2&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><code class=\"notranslate\">exec_insert</code> and <code class=\"notranslate\">insert</code> methods accept a <code class=\"notranslate\">returning</code> argument, however only PostgreSQL adapter fully supports it. This commit adds a validation that raises in case if value passed as <code class=\"notranslate\">returning</code> is not supported by the adapter.</p>\n<p dir=\"auto\">The check allows to supply one-sized Array for the \"unsupported\" case as technically SQLite and MySQL can return the inserted row id, but no more than that, at least at this moment.</p>\n<h3 dir=\"auto\">Implementation details</h3>\n<p dir=\"auto\">Since <code class=\"notranslate\">insert</code> method eventually calls into <code class=\"notranslate\">exec_insert</code> the validation only exists in the <code class=\"notranslate\">exec_insert</code> method. Validation is extracted into a separate method so both default and Trilogy's <code class=\"notranslate\">exec_insert</code> implementation can share it</p>",
            "url": "https://github.com/rails/rails/pull/48418",
            "title": "Raise if `exec_insert` and `insert` are used with an unsupported `returning` value",
            "date_modified": "2023-06-09T01:17:14.000Z",
            "date_published": "2023-06-07T14:44:41.000Z",
            "author": {
                "name": "nvasilevski",
                "url": "https://github.com/nvasilevski"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/18366969?u=e6919af135d360a17f71ab7380f0d57fe08be21a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">This Pull Request has been created because there is no explanation of <code class=\"notranslate\">ActiveRecord::Relation#pick</code> in the guide.</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">This Pull Request changes to add the documentation for <code class=\"notranslate\">ActiveRecord::Relation#pick</code> to the guide.</p>\n<h3 dir=\"auto\">Additional information</h3>\n<ul dir=\"auto\">\n<li>api url: <a href=\"https://edgeapi.rubyonrails.org/classes/ActiveRecord/Calculations.html#method-i-pluck\" rel=\"nofollow\">https://edgeapi.rubyonrails.org/classes/ActiveRecord/Calculations.html#method-i-pluck</a></li>\n<li>edge guide url: <a href=\"https://edgeguides.rubyonrails.org/active_record_querying.html#pluck\" rel=\"nofollow\">https://edgeguides.rubyonrails.org/active_record_querying.html#pluck</a></li>\n</ul>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48404",
            "title": "Added documentation for `ActiveRecord::Relation#pick` [skip ci]",
            "date_modified": "2023-06-06T13:45:36.000Z",
            "date_published": "2023-06-06T07:02:14.000Z",
            "author": {
                "name": "soartec-lab",
                "url": "https://github.com/soartec-lab"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/193936?u=0009ccae9daa72c7b1c8590f9c67560b29a54902&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">Add support for multi column where syntax (aka <code class=\"notranslate\">WHERE (id, user) IN ((1, 'Josef'), (2, 'Jimmy'))</code>) for PostgreSQL adapter.</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"values = [[1, 'Josef'], [2, 'Jimmy']]\nUser.where('(id, name) IN (?)', values).to_sql\n# =&gt; SELECT &quot;users&quot;.* FROM &quot;users&quot; WHERE ((id, name) IN ((1, 'Josef'),(2, 'Jimmy')))\"><pre class=\"notranslate\"><span class=\"pl-s1\">values</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'Josef'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'Jimmy'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">]</span>\n<span class=\"pl-v\">User</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">where</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'(id, name) IN (?)'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">values</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">to_sql</span>\n<span class=\"pl-c\"># =&gt; SELECT \"users\".* FROM \"users\" WHERE ((id, name) IN ((1, 'Josef'),(2, 'Jimmy')))</span></pre></div>\n<p dir=\"auto\">currently this raises an exception</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"/app/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.3/lib/active_record/connection_adapters/abstract/quoting.rb:25:in `quote': can't quote Array (TypeError)\"><pre class=\"notranslate\"><code class=\"notranslate\">/app/vendor/bundle/ruby/3.1.0/gems/activerecord-7.0.4.3/lib/active_record/connection_adapters/abstract/quoting.rb:25:in `quote': can't quote Array (TypeError)\n</code></pre></div>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">It is possible to chain <code class=\"notranslate\">OR</code> conditions like <code class=\"notranslate\">WHERE (id = 1 AND user = 'Josef') OR (id = 2 AND user = 'Jimmy')</code>, but in my use case I do need to handle ten thousands of individual values. Per my testing this approach is heavy for PostgreSQL planner and affects planning time according to <code class=\"notranslate\">EXPLAIN</code>.</p>\n<ul dir=\"auto\">\n<li>1 000 conditions of 2 values combined by OR\n<ul dir=\"auto\">\n<li>Planning Time: 280.032 ms</li>\n</ul>\n</li>\n<li>10 000 conditions of 2 values combined by OR\n<ul dir=\"auto\">\n<li>Planning Time: 27598.735 ms</li>\n</ul>\n</li>\n</ul>\n<p dir=\"auto\">compared to multi-column WHERE</p>\n<ul dir=\"auto\">\n<li>1 000 conditions of 2 values using \"multi-where\"\n<ul dir=\"auto\">\n<li>Planning Time: 8.722 ms</li>\n</ul>\n</li>\n<li>10 000 conditions of 2 values using \"multi-where\"\n<ul dir=\"auto\">\n<li>Planning Time: 131.082 ms</li>\n</ul>\n</li>\n</ul>\n<h3 dir=\"auto\">Additional information</h3>\n<p dir=\"auto\">It is also easier to compose query this way. Using <code class=\"notranslate\">or</code> query needs to be composed in iterative way.</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"values = [ [1, 'Josef'], ... ] # array of 10 000 values\nscope = User.all\n\nvalues.each do |value|\n  scope = scope.or(User.where(id: value[0], name: value[1])\nend\n\nscope.load # execute\"><pre class=\"notranslate\"><span class=\"pl-s1\">values</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span> <span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'Josef'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> ... <span class=\"pl-kos\">]</span> <span class=\"pl-c\"># array of 10 000 values</span>\n<span class=\"pl-s1\">scope</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">User</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">all</span>\n\n<span class=\"pl-s1\">values</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">each</span> <span class=\"pl-k\">do</span> |<span class=\"pl-s1\">value</span>|\n  <span class=\"pl-s1\">scope</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">scope</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">or</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">User</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">where</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">id</span>: <span class=\"pl-s1\">value</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">name</span>: <span class=\"pl-s1\">value</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-en\">end</span>\n\n<span class=\"pl-s1\">scope</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">load</span> <span class=\"pl-c\"># execute</span></pre></div>\n<p dir=\"auto\"><em>I had troubles even with this approach since <code class=\"notranslate\">or</code> doesn't work properly when called without starting where chain already on scope. But I'm not 100% sure I wasn't doing something wrong. I had to do following actually.</em></p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"values = [ [1, 'Josef'], ... ] # array of 10 000 values\nscope = User.all\n\n# start where chain first\nfirst_value = values.shift \nscope = scope.where(id: first_value[0], name: first_value[1])\n\n# handle rest with or\nvalues.each do |value|\n  scope = scope.or(User.where(id: value[0], name: value[1])\nend\n\nscope.load # execute\"><pre class=\"notranslate\"><span class=\"pl-s1\">values</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">[</span> <span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'Josef'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> ... <span class=\"pl-kos\">]</span> <span class=\"pl-c\"># array of 10 000 values</span>\n<span class=\"pl-s1\">scope</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">User</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">all</span>\n\n<span class=\"pl-c\"># start where chain first</span>\n<span class=\"pl-s1\">first_value</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">values</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">shift</span> \n<span class=\"pl-s1\">scope</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">scope</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">where</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">id</span>: <span class=\"pl-s1\">first_value</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">name</span>: <span class=\"pl-s1\">first_value</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-c\"># handle rest with or</span>\n<span class=\"pl-s1\">values</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">each</span> <span class=\"pl-k\">do</span> |<span class=\"pl-s1\">value</span>|\n  <span class=\"pl-s1\">scope</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">scope</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">or</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">User</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">where</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">id</span>: <span class=\"pl-s1\">value</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">name</span>: <span class=\"pl-s1\">value</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-en\">end</span>\n\n<span class=\"pl-s1\">scope</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">load</span> <span class=\"pl-c\"># execute</span></pre></div>\n<p dir=\"auto\">If welcomed, this could be later turned into feature of hash version of where arguments and being supported across all adapters just using the most optimised way available.</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"User.where([:id, :name] =&gt; [[1, 'Josef'], [2, 'Jimmy']])\n# =&gt; uses multi-where when supported (PostgreSQL only) or OR chained combinations for the rest\"><pre class=\"notranslate\"><span class=\"pl-v\">User</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">where</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-pds\">:id</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">:name</span><span class=\"pl-kos\">]</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">[</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'Josef'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">[</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'Jimmy'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-c\"># =&gt; uses multi-where when supported (PostgreSQL only) or OR chained combinations for the rest</span></pre></div>\n<h3 dir=\"auto\">Tip</h3>\n<p dir=\"auto\"><em>for quick local test, I used following patch</em></p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"module CustomPostgreSQLQuoting\n  def quote(value)\n    if value.is_a?(Array)\n      &quot;(#{value.map { |v| super(v) }.join(', ')})&quot;\n    else\n      super\n    end\n  end\nend\n\nActiveRecord::ConnectionAdapters::PostgreSQLAdapter.prepend(CustomPostgreSQLQuoting)\"><pre class=\"notranslate\"><span class=\"pl-k\">module</span> <span class=\"pl-v\">CustomPostgreSQLQuoting</span>\n  <span class=\"pl-k\">def</span> <span class=\"pl-en\">quote</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">value</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-k\">if</span> <span class=\"pl-s1\">value</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">is_a?</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">Array</span><span class=\"pl-kos\">)</span>\n      <span class=\"pl-s\">\"(<span class=\"pl-s1\"><span class=\"pl-kos\">#{</span><span class=\"pl-s1\">value</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">map</span> <span class=\"pl-kos\">{</span> |<span class=\"pl-s1\">v</span>| <span class=\"pl-smi\">super</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">v</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">join</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">', '</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span></span>)\"</span>\n    <span class=\"pl-k\">else</span>\n      <span class=\"pl-smi\">super</span>\n    <span class=\"pl-k\">end</span>\n  <span class=\"pl-k\">end</span>\n<span class=\"pl-k\">end</span>\n\n<span class=\"pl-v\">ActiveRecord</span>::<span class=\"pl-v\">ConnectionAdapters</span>::<span class=\"pl-v\">PostgreSQLAdapter</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">prepend</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">CustomPostgreSQLQuoting</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">related to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1586757199\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/47410\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/47410/hovercard?comment_id=1434957200&amp;comment_type=issue_comment\" href=\"https://github.com/rails/rails/pull/47410#issuecomment-1434957200\">#47410 (comment)</a> as well</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48393",
            "title": "Support nested array bind parameter for PostgreSQL parameter.",
            "date_modified": "2023-06-06T10:44:04.000Z",
            "date_published": "2023-06-04T12:31:54.000Z",
            "author": {
                "name": "simi",
                "url": "https://github.com/simi"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/3414795?u=f40b7e0ce2902c65ed78284b790eaffaff8b59d7&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">This Pull Request has been created because I would like to use <code class=\"notranslate\">accepts_nested_attributes_for</code> and <code class=\"notranslate\">fields_for</code> with a public_id column instead of the PK. <code class=\"notranslate\">fields_for</code> doesnt seem to honor <code class=\"notranslate\">to_param</code> because it continues to place the PK in the hidden ID field.</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">This Pull Request changes<code class=\"notranslate\"> accepts_nested_attributes_for</code> and <code class=\"notranslate\">fields_for</code> behaviour by adding an additional option to <code class=\"notranslate\">accepts_nested_attributes_for</code> called <code class=\"notranslate\">:public_id_column</code></p>\n<p dir=\"auto\">This new argument is intended to allow to specify a public ID column to use for the value of the forms hidden <code class=\"notranslate\">[id]</code> input rather than the default public key.</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class Post &lt; ApplicationRecord\n  accepts_nested_attributes_for :comments, public_id_column: :public_id\nend\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">Post</span> &lt; <span class=\"pl-v\">ApplicationRecord</span>\n  <span class=\"pl-en\">accepts_nested_attributes_for</span> <span class=\"pl-pds\">:comments</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">public_id_column</span>: <span class=\"pl-pds\">:public_id</span>\n<span class=\"pl-k\">end</span></pre></div>\n<p dir=\"auto\">When used in views/forms with <code class=\"notranslate\">fields_for</code> it should automatically output the following hidden ID field.</p>\n<div class=\"highlight highlight-text-html-basic notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"&lt;input \n  type=&quot;hidden&quot;\n  name=&quot;post[comments_attributes][0][id]&quot; \n  value=&quot;value-of-the-public_id-column&quot;\n  ...etc...\n&gt;\"><pre class=\"notranslate\"><span class=\"pl-kos\">&lt;</span><span class=\"pl-ent\">input</span> \n  <span class=\"pl-c1\">type</span>=\"<span class=\"pl-s\">hidden</span>\"\n  <span class=\"pl-c1\">name</span>=\"<span class=\"pl-s\">post[comments_attributes][0][id]</span>\" \n  <span class=\"pl-c1\">value</span>=\"<span class=\"pl-s\">value-of-the-public_id-column</span>\"\n  <span class=\"pl-c1\">...etc...</span>\n<span class=\"pl-kos\">&gt;</span></pre></div>\n<p dir=\"auto\">I chose add an argument to <code class=\"notranslate\">accepts_nested_attributes_for</code> because its a lot simpler to add an argument to this method rather than to change the basics of ActiveRecord::Base by adding a new method similar to how <code class=\"notranslate\">to_param</code> works. Looking for productive feedback here if we want to take the route of defining a class method or something instead.</p>\n<h3 dir=\"auto\">Additional information</h3>\n<p dir=\"auto\">Discussion on reddit: <a href=\"https://www.reddit.com/r/rails/comments/13xulzr/how_can_i_use_accepts_nested_attributes_for/\" rel=\"nofollow\">https://www.reddit.com/r/rails/comments/13xulzr/how_can_i_use_accepts_nested_attributes_for/</a></p>\n<p dir=\"auto\">Video walkthrough on how the <a href=\"https://github.com/lorint/brick\"><code class=\"notranslate\">brick</code> gem </a> is currently hacking in this functionality with <code class=\"notranslate\">friendly_id</code>. <a href=\"https://www.reddit.com/r/rails/comments/13z4hfq/hey_uwestonganger_accepts_nested_attributes_for/\" rel=\"nofollow\">https://www.reddit.com/r/rails/comments/13z4hfq/hey_uwestonganger_accepts_nested_attributes_for/</a></p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48390",
            "title": "Add :public_id_column option to accepts_nested_attributes_for",
            "date_modified": "2023-06-05T22:30:17.000Z",
            "date_published": "2023-06-02T23:25:48.000Z",
            "author": {
                "name": "westonganger",
                "url": "https://github.com/westonganger"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5657035?u=48dc5950e98b199e1ed1e8c5c3f1e4bfd2b39691&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">I recently had a need to specify an alternative name for the key when used ActiveModel's <code class=\"notranslate\">as_json</code> method with <code class=\"notranslate\">:methods</code> option. For example, I have a <code class=\"notranslate\">User</code> model and I want to render its <code class=\"notranslate\">nick</code> as a <code class=\"notranslate\">unique_id</code>.</p>\n<p dir=\"auto\">While this can be achieved by using <code class=\"notranslate\">alias</code>/<code class=\"notranslate\">alias_method</code> for methods (and <code class=\"notranslate\">alias_attribute</code> for attributes) in the model itself, it does not always makes sense to have them in the model, because the name can be from a different domain (vocabulary etc) and so be confusing when defined there.</p>\n<p dir=\"auto\">Now, this is possible with the following syntax:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"user.as_json(methods: [:permalink, { unique_id: :nick }])\n# =&gt; { &quot;id&quot; =&gt; 1, &quot;name&quot; =&gt; &quot;Konata Izumi&quot;, &quot;age&quot; =&gt; 16, &quot;nick&quot; =&gt; &quot;kozumi&quot;,\n#      &quot;permalink&quot; =&gt; &quot;1-konata-izumi&quot;, &quot;unique_id&quot; =&gt; &quot;kozumi&quot; }\"><pre class=\"notranslate\"><span class=\"pl-en\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">as_json</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">methods</span>: <span class=\"pl-kos\">[</span><span class=\"pl-pds\">:permalink</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-pds\">unique_id</span>: <span class=\"pl-pds\">:nick</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-c\"># =&gt; { \"id\" =&gt; 1, \"name\" =&gt; \"Konata Izumi\", \"age\" =&gt; 16, \"nick\" =&gt; \"kozumi\",</span>\n<span class=\"pl-c\">#      \"permalink\" =&gt; \"1-konata-izumi\", \"unique_id\" =&gt; \"kozumi\" }</span></pre></div>\n<p dir=\"auto\">This works for attributes too:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"user.as_json(except: [:name], methods: { nickname: :name })\"><pre class=\"notranslate\"><span class=\"pl-en\">user</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">as_json</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">except</span>: <span class=\"pl-kos\">[</span><span class=\"pl-pds\">:name</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">methods</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-pds\">nickname</span>: <span class=\"pl-pds\">:name</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div>",
            "url": "https://github.com/rails/rails/pull/48386",
            "title": "Add ability to specify resulting key names for `as_json` `:methods` option",
            "date_modified": "2023-06-02T21:18:11.000Z",
            "date_published": "2023-06-02T20:50:53.000Z",
            "author": {
                "name": "fatkodima",
                "url": "https://github.com/fatkodima"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/425216?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n\n<p dir=\"auto\">This Pull Request has been created because <code class=\"notranslate\">load_async()</code> used ActiveRecord::Relation return value inside the <code class=\"notranslate\">connected_to</code> block will immediately back to foreground execution by calling <code class=\"notranslate\">load</code> method.</p>\n<p dir=\"auto\">already discussed at <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1733815194\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/48351\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rails/rails/issues/48351/hovercard\" href=\"https://github.com/rails/rails/issues/48351\">#48351</a></p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">This Pull Request add support usage of <code class=\"notranslate\">load_async()</code> inside the <code class=\"notranslate\">connected_to</code> block to asynchronous query execution<br>\nto specific replica/shard database like below code.</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"@foo = ActiveRecord::Base.connected_to(role: :reading) do\n  User.where(id: 1).load_async\nend\"><pre class=\"notranslate\"><span class=\"pl-c1\">@foo</span> <span class=\"pl-c1\">=</span> <span class=\"pl-v\">ActiveRecord</span>::<span class=\"pl-v\">Base</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">connected_to</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">role</span>: <span class=\"pl-pds\">:reading</span><span class=\"pl-kos\">)</span> <span class=\"pl-k\">do</span>\n  <span class=\"pl-v\">User</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">where</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">id</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">load_async</span>\n<span class=\"pl-k\">end</span></pre></div>\n<h3 dir=\"auto\">Additional information</h3>\n\n<p dir=\"auto\">added test case and others in the <code class=\"notranslate\">connection_handlers_multi_db_test.rb</code> are passed in my local machine.</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"vscode ➜ /workspaces/rails/activerecord (feature/load-async-support-in-connected-to) $ bin/test test/cases/connection_adapters/connection_handlers_multi_db_test.rb\nUsing sqlite3\nRun options: --seed 55330\n\n# Running:\n\n.......................\n\nFinished in 0.342922s, 67.0706 runs/s, 224.5408 assertions/s.\n23 runs, 77 assertions, 0 failures, 0 errors, 0 skips\"><pre class=\"notranslate\">vscode ➜ /workspaces/rails/activerecord (feature/load-async-support-in-connected-to) $ bin/test test/cases/connection_adapters/connection_handlers_multi_db_test.rb\nUsing sqlite3\nRun options: --seed 55330\n\n<span class=\"pl-c\"><span class=\"pl-c\">#</span> Running:</span>\n\n.......................\n\nFinished <span class=\"pl-k\">in</span> 0.342922s, 67.0706 runs/s, 224.5408 assertions/s.\n23 runs, 77 assertions, 0 failures, 0 errors, 0 skips</pre></div>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48364",
            "title": "Add support using `load_async()` inside `connected_to` block.",
            "date_modified": "2023-06-01T07:46:40.000Z",
            "date_published": "2023-06-01T07:46:37.000Z",
            "author": {
                "name": "r-plus",
                "url": "https://github.com/r-plus"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/11556013?u=ee0a9a98d8edb36d08c7d4c7f28c30897c21eced&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">This Pull Request has been created because moving an ActiveRecord class makes previously generated signed ids invalid.</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">This Pull Request changes what base purpose is chosen for a signed id and uses <code class=\"notranslate\">base_class.polymorphic_name</code> instead of <code class=\"notranslate\">base_class.name</code>.<br>\nThe rationale behind this proposal would be that <code class=\"notranslate\">polymorphic_name</code> is the representation of the class/table in external systems.</p>\n<h3 dir=\"auto\">Additional information</h3>\n<p dir=\"auto\">I am not 100% sure <code class=\"notranslate\">polymorphic_name</code> is the best fit, it is convenient because overriding it would solve multiple issues at once (polymorphic relations, signed ids) when having to move an ActiveRecord class.</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48358",
            "title": "Signed id with polymorphic name purpose",
            "date_modified": "2023-06-06T15:19:44.000Z",
            "date_published": "2023-05-31T20:17:36.000Z",
            "author": {
                "name": "alxckn",
                "url": "https://github.com/alxckn"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/36955431?u=66a3370484ae568c17167e7a029fcb2ab17138b3&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<p dir=\"auto\">Hello contibutors <g-emoji class=\"g-emoji\" alias=\"raised_back_of_hand\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f91a.png\">🤚</g-emoji> thank you for your efforts to keep the project alive.</p>\n<h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">When I use <code class=\"notranslate\">as_json</code> method to make the body of the response, There was one inconvenience.<br>\nAs per Ruby's convention I usually put a question mark in the name of a method. (ex: has_value?)<br>\nIt's not a problem inside Ruby, but it causes problems when used in other applications accessing the rails server.<br>\nTo solve this, I had to manipulate the hash returned by <code class=\"notranslate\">as_json</code>, which wasn't very clean.</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">To solve the above problem I add a new option called <code class=\"notranslate\">rename</code> to the <code class=\"notranslate\">serializable_hash</code> method.<br>\nIt can be used when you want to rename attributes or methods.</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48338",
            "title": "Add rename option to serializable_hash method",
            "date_modified": "2023-06-05T02:33:59.000Z",
            "date_published": "2023-05-30T03:07:36.000Z",
            "author": {
                "name": "dongcheolpark",
                "url": "https://github.com/dongcheolpark"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/277819?u=f88292414deeecfd67fee18ae9d7297bcc001138&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">When working on <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1730091371\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/48327\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/48327/hovercard\" href=\"https://github.com/rails/rails/pull/48327\">#48327</a>, I noticed the comment for this class references a method which has moved to the <a href=\"https://github.com/heartcombo/responders\">responders gem</a>. Nothing else in Rails uses it internally, so I think we can move it to that gem and deprecate it from Rails.</p>\n<p dir=\"auto\">I've opened a PR to move it in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1730121732\" data-permission-text=\"Title is private\" data-url=\"https://github.com/heartcombo/responders/issues/245\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/heartcombo/responders/pull/245/hovercard\" href=\"https://github.com/heartcombo/responders/pull/245\">heartcombo/responders#245</a>.</p>\n<p dir=\"auto\">Inspiration for the constant deprecation path came from <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/rails/rails/commit/3e2552db899160266f175f2fda61e44be258aecd/hovercard\" href=\"https://github.com/rails/rails/commit/3e2552db899160266f175f2fda61e44be258aecd\"><tt>3e2552d</tt></a> but LMK if there is a better way! <g-emoji class=\"g-emoji\" alias=\"bow\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f647.png\">🙇</g-emoji></p>",
            "url": "https://github.com/rails/rails/pull/48328",
            "title": "Deprecate ActionController::MissingRenderer",
            "date_modified": "2023-05-30T19:34:48.000Z",
            "date_published": "2023-05-29T05:59:17.000Z",
            "author": {
                "name": "zzak",
                "url": "https://github.com/zzak"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/984854?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">Following on the Arel work in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1717924373\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/48261\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/48261/hovercard\" href=\"https://github.com/rails/rails/pull/48261\">#48261</a>, this commit adds the ability to provide a materialization hint to a CTE in ActiveRecord. To support the hint, a more verbose syntax for CTE values is introduced:</p>\n<div class=\"highlight highlight-source-ruby notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Post.with(posts_with_comments: { query: Post.where(&quot;comments_count &gt; ?&quot;, 0), materialized: true })\"><pre class=\"notranslate\"><span class=\"pl-v\">Post</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">with</span><span class=\"pl-kos\">(</span><span class=\"pl-pds\">posts_with_comments</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-pds\">query</span>: <span class=\"pl-v\">Post</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">where</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"comments_count &gt; ?\"</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">0</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-pds\">materialized</span>: <span class=\"pl-c1\">true</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">The CTE value is described as a hash that contains a required <code class=\"notranslate\">:query</code> key and an optional <code class=\"notranslate\">:materialized</code> key. The set of available options could be expanded in the future to accommodate, for example, postgres's various options for recursive CTEs.</p>\n<h3 dir=\"auto\">Additional information</h3>\n<p dir=\"auto\">I don't know whether there's any appetite within the core team to expose this functionality in AR's public API. But if there is, this approach seemed like the most plausible choice, given the current <code class=\"notranslate\">#with</code> interface. That said, I'm more than happy to talk about alternatives.</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48305",
            "title": "Add syntax for CTE materialization hint to ActiveRecord",
            "date_modified": "2023-05-26T12:59:57.000Z",
            "date_published": "2023-05-26T00:35:36.000Z",
            "author": {
                "name": "97jaz",
                "url": "https://github.com/97jaz"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/277819?u=f88292414deeecfd67fee18ae9d7297bcc001138&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Continuation of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1723747653\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/48288\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/48288/hovercard\" href=\"https://github.com/rails/rails/pull/48288\">#48288</a></p>\n<p dir=\"auto\">This covers the following cases:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">&lt;tt&gt;config/application.rb&lt;/tt&gt;</code> -&gt; <code class=\"notranslate\">+config/application.rb+</code></li>\n<li><code class=\"notranslate\">&lt;tt&gt;test/mailers/previews&lt;/tt&gt;</code> -&gt; <code class=\"notranslate\">+test/mailers/previews+</code></li>\n<li><code class=\"notranslate\">&lt;tt&gt;foo!&lt;/tt&gt;</code> -&gt; <code class=\"notranslate\">+foo!+</code></li>\n<li><code class=\"notranslate\">&lt;tt&gt;foo*&lt;/tt&gt;</code> -&gt; <code class=\"notranslate\">+foo*+</code></li>\n<li><code class=\"notranslate\">&lt;tt&gt;foo?&lt;/tt&gt;</code> -&gt; <code class=\"notranslate\">+foo?+</code></li>\n<li><code class=\"notranslate\">&lt;tt&gt;keyword&lt;/tt&gt;</code> -&gt; <code class=\"notranslate\">+keyword+</code></li>\n<li><code class=\"notranslate\">&lt;tt&gt;:symbol&lt;/tt&gt;</code> -&gt; <code class=\"notranslate\">+:symbol+</code></li>\n<li><code class=\"notranslate\">&lt;tt&gt;default_options=&lt;/tt&gt;</code> -&gt; <code class=\"notranslate\">+default_options=+</code></li>\n<li><code class=\"notranslate\">&lt;tt&gt;Time.zone=&lt;/tt&gt;</code> -&gt; <code class=\"notranslate\">+Time.zone=+</code></li>\n<li><code class=\"notranslate\">&lt;tt&gt;activemodel.errors.models.MODEL.attributes.ATTRIBUTE.MESSAGE&lt;/tt&gt;</code> -&gt; <code class=\"notranslate\">+activemodel.errors.models.MODEL.attributes.ATTRIBUTE.MESSAGE+</code></li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48296",
            "title": "Use short-form fixed-width RDoc form for symbols",
            "date_modified": "2023-05-25T00:05:40.000Z",
            "date_published": "2023-05-25T00:03:08.000Z",
            "author": {
                "name": "zzak",
                "url": "https://github.com/zzak"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/93276?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">This change is necessary to address a potential issue that could arise when a button or an input of type submit contains child elements, such as spans, icons, or other HTML elements.</p>\n<p dir=\"auto\">Currently, ActiveStorage's <code class=\"notranslate\">didClick</code> event listener checks the target of the click event to determine if a submit button was clicked. The target property of the event refers to the specific HTML element that was clicked.</p>\n<p dir=\"auto\">In cases where a submit button contains child elements, and one of these child elements is the element that actually gets clicked, the target would refer to this child element, not the button itself.</p>\n<p dir=\"auto\">Since the <code class=\"notranslate\">didClick</code> function checks if the target is a button or an input of type submit, this check would fail, and the button wouldn't be stored in <code class=\"notranslate\">submitButtonsByForm</code>.</p>\n<p dir=\"auto\">As a result, if the form is then submitted after a direct upload, the first submit button in the form could be incorrectly used to submit the form, even if a different button was originally clicked. This could cause unexpected behavior, as different submit buttons might be intended to trigger different actions on form submission.</p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">By using the <code class=\"notranslate\">Element.closest()</code> method to find the nearest ancestor of the clicked element that is a button or an input of type submit, we ensure that the correct button is stored in <code class=\"notranslate\">submitButtonsByForm</code>, even if the click event was triggered by a child element of the button. This addresses the issue and ensures that the correct button is used to submit the form after a direct upload.</p>",
            "url": "https://github.com/rails/rails/pull/48290",
            "title": "Support nested elements inside <button>",
            "date_modified": "2023-05-24T15:22:12.000Z",
            "date_published": "2023-05-24T15:19:15.000Z",
            "author": {
                "name": "marckohlbrugge",
                "url": "https://github.com/marckohlbrugge"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/52599949?u=3a3e6f882db1807067702b1fee03636e352d3a3d&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">Currently, when<code class=\"notranslate\">invert_where</code> is called without any existing where conditions, it throws an error with invalid query.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Post.invert_where.to_sql\n#=&gt; SELECT &quot;posts&quot;.* FROM &quot;posts&quot; WHERE NOT ()\"><pre class=\"notranslate\"><code class=\"notranslate\">Post.invert_where.to_sql\n#=&gt; SELECT \"posts\".* FROM \"posts\" WHERE NOT ()\n</code></pre></div>\n<p dir=\"auto\">modified the <code class=\"notranslate\">invert_where</code> to return the receiver as is when there are no <code class=\"notranslate\">where</code> conditions to invert.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Post.order(:id).invert_where.to_sql\n#=&gt;  &quot;SELECT \\&quot;posts\\&quot;.* FROM \\&quot;posts\\&quot; ORDER BY \\&quot;posts\\&quot;.\\&quot;id\\&quot; ASC&quot;\"><pre class=\"notranslate\"><code class=\"notranslate\">Post.order(:id).invert_where.to_sql\n#=&gt;  \"SELECT \\\"posts\\\".* FROM \\\"posts\\\" ORDER BY \\\"posts\\\".\\\"id\\\" ASC\"\n</code></pre></div>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">When the method chain of <code class=\"notranslate\">ActiveRecord_Relation</code> includes an unintentional method such as <code class=\"notranslate\">unscope(:where)</code> and I use invert_where after that, unexpected errors occur.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"relation = Post.where(id: 2)\nrelation = relation.unscope(:where)\nrelation.invert_where\"><pre class=\"notranslate\"><code class=\"notranslate\">relation = Post.where(id: 2)\nrelation = relation.unscope(:where)\nrelation.invert_where\n</code></pre></div>\n<p dir=\"auto\">Also, this change has some kind of consistency with how <code class=\"notranslate\">unscope(:where)</code> behaves when there are no scopes defined, I think <g-emoji class=\"g-emoji\" alias=\"bowing_woman\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f647-2640.png\">🙇‍♀️</g-emoji></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Post.order(:id).unscope(:where)\n#=&gt; &quot;SELECT \\&quot;posts\\&quot;.* FROM \\&quot;posts\\&quot; ORDER BY \\&quot;posts\\&quot;.\\&quot;id\\&quot; ASC&quot;\"><pre class=\"notranslate\"><code class=\"notranslate\">Post.order(:id).unscope(:where)\n#=&gt; \"SELECT \\\"posts\\\".* FROM \\\"posts\\\" ORDER BY \\\"posts\\\".\\\"id\\\" ASC\"\n</code></pre></div>\n<h3 dir=\"auto\">Additional information</h3>\n\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48284",
            "title": "Fixing invert_where method to handle empty where conditions",
            "date_modified": "2023-06-05T12:20:20.000Z",
            "date_published": "2023-05-23T13:35:39.000Z",
            "author": {
                "name": "a5-stable",
                "url": "https://github.com/a5-stable"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/19192189?u=dd60737844a9db7f1475bab21fc3e5258a405e15&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">In my experience, to enable efficient handling of exceptions, network clients must clearly categorize their exceptions in two categories:</p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Network/Connection errors: whenever we didn't actually get a response from the server and perhaps the issue is transient and retrying now or later will work. e.g. Timeout, authentication error, DNS error, etc.</p>\n</li>\n<li>\n<p dir=\"auto\">Client errors: when the client did something wrong, and it's likely a bug in the user code and they should fix something. e.g. SQL Syntax error, unkown column, etc.</p>\n</li>\n</ul>\n<p dir=\"auto\">Such categorization allows for better automated handling of exceptions, like retrying or not, sending the exception to a reporting service or just emitting a health metric, etc.</p>\n<p dir=\"auto\">Historically Active Record was quite bad at translating the underlying adapter errors into clean errors of its own, and lots of network related errors were translated into <code class=\"notranslate\">SatementInvalid</code> as a big catch all.</p>\n<p dir=\"auto\">In 2019 we started better tranlating these errors (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"468823980\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/36692\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/36692/hovercard\" href=\"https://github.com/rails/rails/pull/36692\">#36692</a>, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"468847665\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/36694\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/rails/rails/pull/36694/hovercard\" href=\"https://github.com/rails/rails/pull/36694\">#36694</a>) but for backward compatibility reasons these new errors still inherited from <code class=\"notranslate\">StatementInvalid</code>.</p>\n<p dir=\"auto\">I think now would be a good time to consider fixing this historical cruft.</p>\n<p dir=\"auto\">Note: opening as a draft as this PR isn't necessarily exactly what I want to change, I'm more interested in gathering thoughts from interested parties.</p>\n<p dir=\"auto\">cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/matthewd/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/matthewd\">@matthewd</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/eileencodes/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/eileencodes\">@eileencodes</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/rafaelfranca/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rafaelfranca\">@rafaelfranca</a> any opinions?</p>",
            "url": "https://github.com/rails/rails/pull/48280",
            "title": "ActiveRecord: make query timeout errors inherit from the base connection error",
            "date_modified": "2023-05-23T10:57:55.000Z",
            "date_published": "2023-05-23T08:35:46.000Z",
            "author": {
                "name": "casperisfine",
                "url": "https://github.com/casperisfine"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/75765648?u=1dc3ffb2f347af44627baa665b1b2dff0abd7dd1&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Fixed incorrect sorting using order keyword in in_batches method</p>\n\n<h3 dir=\"auto\">Motivation / Background</h3>\n\n<p dir=\"auto\">Fix incorrect sorting using order keyword in in_batches method.</p>\n<p dir=\"auto\">example (posts table has id as the primary key)</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Post.in_batches(order: :desc, use_ranges: false).first.pluck(:id)\n:actual =&gt; [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n:expected  =&gt; [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]\"><pre class=\"notranslate\"><code class=\"notranslate\">Post.in_batches(order: :desc, use_ranges: false).first.pluck(:id)\n:actual =&gt; [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n:expected  =&gt; [11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]\n</code></pre></div>\n<h3 dir=\"auto\">Additional information</h3>\n<p dir=\"auto\">if use_ranges keyword is true, the sorting does not work either because of <a href=\"https://github.com/rails/rails/blob/55c3066da325703ff7a9524dbdc479b860db3970/activerecord/lib/active_record/relation/batches.rb#LL278\">this code</a>, but I am not sure if this is the expected behavior.</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48267",
            "title": "FIX correctly sort records with the in_batches method",
            "date_modified": "2023-06-09T13:37:20.000Z",
            "date_published": "2023-05-21T06:17:51.000Z",
            "author": {
                "name": "TakuyaKurimoto",
                "url": "https://github.com/TakuyaKurimoto"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/419086?u=d0fe8d6b68a77ff6fc46bd57cbc2a37db85a6d34&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">In migrations, the <code class=\"notranslate\">up_only</code> helper and the <code class=\"notranslate\">reverting?</code> predicate allow constraining operations in either direction. Adding <code class=\"notranslate\">down_only</code> and <code class=\"notranslate\">migrating?</code> allows defining blocks that need to run when reverting, or running one-liners when migrating without using double negatives. Plus, you no longer need to remember which ones exist and which ones don't.</p>\n\n<p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #48245.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1713995776\" data-permission-text=\"Title is private\" data-url=\"https://github.com/rails/rails/issues/48245\" data-hovercard-type=\"issue\" data-hovercard-url=\"/rails/rails/issues/48245/hovercard\" href=\"https://github.com/rails/rails/issues/48245\">#48245</a></p>\n<h3 dir=\"auto\">Detail</h3>\n<p dir=\"auto\">This Pull Request adds <code class=\"notranslate\">down_only</code> and <code class=\"notranslate\">migrating?</code>.</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature. (Original methods are not tested)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>",
            "url": "https://github.com/rails/rails/pull/48263",
            "title": "Add down only and migrating helpers to migration",
            "date_modified": "2023-05-22T13:40:31.000Z",
            "date_published": "2023-05-20T12:27:00.000Z",
            "author": {
                "name": "goulvench",
                "url": "https://github.com/goulvench"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/22918438?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Motivation / Background</h3>\n<p dir=\"auto\">Certain applications (e.g. Shopify, GitHub), retry all database queries and have been patching <code class=\"notranslate\">#execute</code> / <code class=\"notranslate\">#raw_execute</code> to change the <code class=\"notranslate\">allow_retry</code> kwarg to true. This is brittle. Enabling retries globally should be an option for apps that are willing to accept the risks.</p>\n<h3 dir=\"auto\">Additional information</h3>\n<p dir=\"auto\">Wondering if it's safe to retry transaction-related db methods (e.g. <code class=\"notranslate\">#commit_db_transaction</code>, <code class=\"notranslate\">#exec_restart_db_transaction</code>). As it stands, Shopify's retry patch <em>will</em> retry all of these queries, but our retry patch used to be transaction-aware. Should we stick to avoiding retries, even if the the application has configured retries globally, with these methods or are they fine to retry?</p>\n<h3 dir=\"auto\">Checklist</h3>\n<p dir=\"auto\">Before submitting the PR make sure the following are checked:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> This Pull Request is related to one change. Changes that are unrelated should be opened in separate PRs.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Commit message has a detailed description of what changed and why. If this PR fixes a related issue include it in the commit message. Ex: <code class=\"notranslate\">[Fix #issue-number]</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Tests are added or updated if you fix a bug or add a feature.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> CHANGELOG files are updated for the changed libraries if there is a behavior change or additional feature. Minor bug fixes and documentation changes should not be included.</li>\n</ul>\n<p dir=\"auto\">cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/eileencodes/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/eileencodes\">@eileencodes</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/rafaelfranca/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rafaelfranca\">@rafaelfranca</a></p>",
            "url": "https://github.com/rails/rails/pull/48247",
            "title": "Introduce Active Record config to enable database queries to be retried",
            "date_modified": "2023-05-22T16:04:21.000Z",
            "date_published": "2023-05-17T15:26:51.000Z",
            "author": {
                "name": "adrianna-chang-shopify",
                "url": "https://github.com/adrianna-chang-shopify"
            }
        }
    ]
}